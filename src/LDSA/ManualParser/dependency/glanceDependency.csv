ID,Option A,Option B,Option A Description,Option B Description
1,config-dir,config-file,"Optional. Default: None Specified on the command line only. Takes a path to a configuration directory from which all *.conf fragments
are loaded. This provides an alternative to multiple config-file options when it is inconvenient to explicitly enumerate all the
configuration files, for example when an unknown number of config fragments
are being generated by a deployment framework. If config-dir is set, then config-file is ignored. An example usage would be: The numeric prefixes in the example above are only necessary if a specific
parse ordering is required (i.e. if an individual config option set in an
earlier fragment is overridden in a later fragment). Note that glance-manage currently loads configuration from three files: glance-api.conf glance-manage.conf By default glance-manage.conf only specifies a custom logging file but
other configuration options for glance-manage should be migrated
in there. Warning : Options set in glance-manage.conf will override options of
the same section and name set in glance-api.conf","Optional. Default: See below for default search order. Specified on the command line only. Takes a path to a configuration file to use when running the program. If this
CLI option is not specified, then we check to see if the first argument is a
file. If it is, then we try to use that as the configuration file.
If there is no file or there were no arguments, we search for a configuration
file in the following order: ~/.glance ~/ /etc/glance /etc The filename that is searched for depends on the server application name. So,
if you are starting up the API server, glance-api.conf is searched for."
2,config-dir,config-file,"Optional. Default: None Specified on the command line only. Takes a path to a configuration directory from which all *.conf fragments
are loaded. This provides an alternative to multiple config-file options when it is inconvenient to explicitly enumerate all the
configuration files, for example when an unknown number of config fragments
are being generated by a deployment framework. If config-dir is set, then config-file is ignored. An example usage would be: The numeric prefixes in the example above are only necessary if a specific
parse ordering is required (i.e. if an individual config option set in an
earlier fragment is overridden in a later fragment). Note that glance-manage currently loads configuration from three files: glance-api.conf glance-manage.conf By default glance-manage.conf only specifies a custom logging file but
other configuration options for glance-manage should be migrated
in there. Warning : Options set in glance-manage.conf will override options of
the same section and name set in glance-api.conf","Optional. Default: See below for default search order. Specified on the command line only. Takes a path to a configuration file to use when running the program. If this
CLI option is not specified, then we check to see if the first argument is a
file. If it is, then we try to use that as the configuration file.
If there is no file or there were no arguments, we search for a configuration
file in the following order: ~/.glance ~/ /etc/glance /etc The filename that is searched for depends on the server application name. So,
if you are starting up the API server, glance-api.conf is searched for."
3,workers,enabled,"Number of Glance API worker processes to start. Each worker process will
listen on the same port. Increasing this value may increase performance
(especially if using SSL with compression enabled). Typically it is
recommended to have one worker process per CPU. The value 0 will prevent
any new worker processes from being created. Optional. Default: The number of CPUs available will be used by default.","Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling."
4,log_dir,log_file,"The filepath of the directory to use for log files.
If not specified (the default) the log_file is used as
an absolute filepath.","The filepath of the file to use for logging messages from Glance’s servers.
If missing, the default is to output messages to stdout ,
so if you are running Glance servers in a daemon mode
(using glance-control ) you should make sure that the log_file option is set appropriately."
5,enabled_backends,user,"Required. A comma-separated list of “store_id:store_type” strings. The store ids can
be chosen by the user, whereas valid store types are ( file , http , rbd , swift , cinder , vmware , s3 ).","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
6,filesystem_store_datadir,user,"Optional. Default: /var/lib/glance/images/ Can only be specified in configuration files. This option is specific to the filesystem storage backend. Sets the path where the filesystem storage backend write disk images.
Note that the filesystem storage backend will attempt to create this
directory if it does not exist. Ensure that the user that glance-api runs under has write permissions to this directory.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
7,filesystem_store_file_perm,user,"Optional. Default: 0 Can only be specified in configuration files. This option is specific to the filesystem storage backend. The required permission value, in octal representation, for the created
image file. You can use this value to specify the user of the consuming
service (such as Nova) as the only member of the group that owns
the created files. To keep the default value, assign a permission value that
is less than or equal to 0.  Note that the file owner must maintain read
permission; if this value removes that permission an error message
will be logged and the BadStoreConfiguration exception will be raised.
If the Glance service has insufficient privileges to change file access
permissions, a file will still be saved, but a warning message
will appear in the Glance log.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
8,filesystem_store_datadirs,filesystem_store_datadir,"Optional. Default: /var/lib/glance/images/:1 Example: This option can only be specified in configuration file and is specific
to the filesystem storage backend only. filesystem_store_datadirs option allows administrators to configure
multiple store directories to save glance image in filesystem storage
backend. Each directory can be coupled with its priority. NOTE : This option can be specified multiple times to specify multiple stores. Either filesystem_store_datadir or filesystem_store_datadirs option must be
specified in glance-api.conf Store with priority 200 has precedence over store with priority 100. If no priority is specified, default priority ‘0’ is associated with it. If two filesystem stores have same priority store with maximum free space
will be chosen to store the image. If same store is specified multiple times then BadStoreConfiguration
exception will be raised.","Optional. Default: /var/lib/glance/images/ Can only be specified in configuration files. This option is specific to the filesystem storage backend. Sets the path where the filesystem storage backend write disk images.
Note that the filesystem storage backend will attempt to create this
directory if it does not exist. Ensure that the user that glance-api runs under has write permissions to this directory."
9,swift_store_auth_address,auth_address,"Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use auth_address in the Swift back-end configuration
file instead. This option is specific to the Swift storage backend. Sets the authentication URL supplied to Swift when making calls to its
storage system. For more information about the Swift authentication system,
please see the Swift auth documentation. IMPORTANT NOTE : Swift authentication addresses use HTTPS by default. This
means that if you are running Swift with authentication over HTTP, you need
to set your swift_store_auth_address to the full URL,
including the http:// .",An address where the Swift authentication service is located.
10,swift_store_user,swift_store_auth_address,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use user in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the user to authenticate against the swift_store_auth_address with.,"Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use auth_address in the Swift back-end configuration
file instead. This option is specific to the Swift storage backend. Sets the authentication URL supplied to Swift when making calls to its
storage system. For more information about the Swift authentication system,
please see the Swift auth documentation. IMPORTANT NOTE : Swift authentication addresses use HTTPS by default. This
means that if you are running Swift with authentication over HTTP, you need
to set your swift_store_auth_address to the full URL,
including the http:// ."
11,swift_store_user,user,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use user in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the user to authenticate against the swift_store_auth_address with.,"A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
12,swift_store_user,auth_address,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use user in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the user to authenticate against the swift_store_auth_address with.,An address where the Swift authentication service is located.
13,swift_store_key,swift_store_auth_address,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use key in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the authentication key to authenticate against the swift_store_auth_address with for the user swift_store_user .,"Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use auth_address in the Swift back-end configuration
file instead. This option is specific to the Swift storage backend. Sets the authentication URL supplied to Swift when making calls to its
storage system. For more information about the Swift authentication system,
please see the Swift auth documentation. IMPORTANT NOTE : Swift authentication addresses use HTTPS by default. This
means that if you are running Swift with authentication over HTTP, you need
to set your swift_store_auth_address to the full URL,
including the http:// ."
14,swift_store_key,swift_store_user,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use key in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the authentication key to authenticate against the swift_store_auth_address with for the user swift_store_user .,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use user in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the user to authenticate against the swift_store_auth_address with.
15,swift_store_key,user,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use key in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the authentication key to authenticate against the swift_store_auth_address with for the user swift_store_user .,"A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
16,swift_store_key,key,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use key in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the authentication key to authenticate against the swift_store_auth_address with for the user swift_store_user .,"An authentication key for a user authenticating against the Swift
authentication service."
17,swift_store_key,auth_address,Required when using the Swift storage backend. Can only be specified in configuration files. Deprecated. Use key in the Swift back-end configuration file instead. This option is specific to the Swift storage backend. Sets the authentication key to authenticate against the swift_store_auth_address with for the user swift_store_user .,An address where the Swift authentication service is located.
18,swift_store_create_container_on_put,swift_store_container,"Optional. Default: False Can only be specified in configuration files. This option is specific to the Swift storage backend. If true, Glance will attempt to create the container swift_store_container if it does not exist.",Optional. Default: glance Can only be specified in configuration files. This option is specific to the Swift storage backend. Sets the name of the container to use for Glance images in Swift.
19,swift_store_multiple_containers_seed,swift_store_container,"Optional. Default: 0 Can only be specified in configuration files. This option is specific to the Swift storage backend. When set to 0, a single-tenant store will only use one container to store all
images. When set to an integer value between 1 and 32, a single-tenant store
will use multiple containers to store images, and this value will determine
how many characters from an image UUID are checked when determining what
container to place the image in. The maximum number of containers that will
be created is approximately equal to 16^N. This setting is used only when
swift_store_multi_tenant is disabled. Example: if this config option is set to 3 and
swift_store_container = ‘glance’, then an image with UUID
‘fdae39a1-bac5-4238-aba4-69bcc726e848’ would be placed in the container
‘glance_fda’. All dashes in the UUID are included when creating the container
name but do not count toward the character limit, so in this example
with N=10 the container name would be ‘glance_fdae39a1-ba’. When choosing the value for swift_store_multiple_containers_seed, deployers
should discuss a suitable value with their swift operations team. The authors
of this option recommend that large scale deployments use a value of ‘2’,
which will create a maximum of ~256 containers. Choosing a higher number than
this, even in extremely large scale deployments, may not have any positive
impact on performance and could lead to a large number of empty, unused
containers. The largest of deployments could notice an increase in
performance if swift rate limits are throttling on single container.
Note: If dynamic container creation is turned off, any value for this
configuration option higher than ‘1’ may be unreasonable as the deployer
would have to manually create each container.",Optional. Default: glance Can only be specified in configuration files. This option is specific to the Swift storage backend. Sets the name of the container to use for Glance images in Swift.
20,swift_store_multiple_containers_seed,swift_store_multi_tenant,"Optional. Default: 0 Can only be specified in configuration files. This option is specific to the Swift storage backend. When set to 0, a single-tenant store will only use one container to store all
images. When set to an integer value between 1 and 32, a single-tenant store
will use multiple containers to store images, and this value will determine
how many characters from an image UUID are checked when determining what
container to place the image in. The maximum number of containers that will
be created is approximately equal to 16^N. This setting is used only when
swift_store_multi_tenant is disabled. Example: if this config option is set to 3 and
swift_store_container = ‘glance’, then an image with UUID
‘fdae39a1-bac5-4238-aba4-69bcc726e848’ would be placed in the container
‘glance_fda’. All dashes in the UUID are included when creating the container
name but do not count toward the character limit, so in this example
with N=10 the container name would be ‘glance_fdae39a1-ba’. When choosing the value for swift_store_multiple_containers_seed, deployers
should discuss a suitable value with their swift operations team. The authors
of this option recommend that large scale deployments use a value of ‘2’,
which will create a maximum of ~256 containers. Choosing a higher number than
this, even in extremely large scale deployments, may not have any positive
impact on performance and could lead to a large number of empty, unused
containers. The largest of deployments could notice an increase in
performance if swift rate limits are throttling on single container.
Note: If dynamic container creation is turned off, any value for this
configuration option higher than ‘1’ may be unreasonable as the deployer
would have to manually create each container.","Optional. Default: False Can only be specified in configuration files. This option is specific to the Swift storage backend. If set to True enables multi-tenant storage mode which causes Glance images
to be stored in tenant specific Swift accounts. When set to False Glance
stores all images in a single Swift account."
21,swift_store_admin_tenants,user,"Can only be specified in configuration files. This option is specific to the Swift storage backend. Optional. Default: Not set. A list of swift ACL strings that will be applied as both read and
write ACLs to the containers created by Glance in multi-tenant
mode. This grants the specified tenants/users read and write access
to all newly created image objects. The standard swift ACL string
formats are allowed, including: <tenant_id>:<username>
<tenant_name>:<username>
*:<username> Multiple ACLs can be combined using a comma separated list, for
example: swift_store_admin_tenants = service:glance,*:admin","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
22,swift_store_auth_version,auth_version,"Can only be specified in configuration files. Deprecated. Use auth_version in the Swift back-end configuration
file instead. This option is specific to the Swift storage backend. Optional. Default: 2 A string indicating which version of Swift OpenStack authentication
to use. See the project python-swiftclient for more details.","A version of the authentication service to use.
Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace. Optional. Default: 2"
23,swift_store_service_type,swift_store_auth_version,"Can only be specified in configuration files. This option is specific to the Swift storage backend. Optional. Default: object-store A string giving the service type of the swift service to use. This
setting is only used if swift_store_auth_version is 2 .","Can only be specified in configuration files. Deprecated. Use auth_version in the Swift back-end configuration
file instead. This option is specific to the Swift storage backend. Optional. Default: 2 A string indicating which version of Swift OpenStack authentication
to use. See the project python-swiftclient for more details."
24,swift_store_service_type,auth_version,"Can only be specified in configuration files. This option is specific to the Swift storage backend. Optional. Default: object-store A string giving the service type of the swift service to use. This
setting is only used if swift_store_auth_version is 2 .","A version of the authentication service to use.
Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace. Optional. Default: 2"
25,swift_store_region,swift_store_auth_version,"Can only be specified in configuration files. This option is specific to the Swift storage backend. Optional. Default: Not set. A string giving the region of the swift service endpoint to use. This
setting is only used if swift_store_auth_version is 2 . This
setting is especially useful for disambiguation if multiple swift
services might appear in a service catalog during authentication.","Can only be specified in configuration files. Deprecated. Use auth_version in the Swift back-end configuration
file instead. This option is specific to the Swift storage backend. Optional. Default: 2 A string indicating which version of Swift OpenStack authentication
to use. See the project python-swiftclient for more details."
26,swift_store_region,auth_version,"Can only be specified in configuration files. This option is specific to the Swift storage backend. Optional. Default: Not set. A string giving the region of the swift service endpoint to use. This
setting is only used if swift_store_auth_version is 2 . This
setting is especially useful for disambiguation if multiple swift
services might appear in a service catalog during authentication.","A version of the authentication service to use.
Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace. Optional. Default: 2"
27,swift_store_endpoint_type,swift_store_auth_version,"Can only be specified in configuration files. This option is specific to the Swift storage backend. Optional. Default: publicURL A string giving the endpoint type of the swift service endpoint to
use. This setting is only used if swift_store_auth_version is 2 .","Can only be specified in configuration files. Deprecated. Use auth_version in the Swift back-end configuration
file instead. This option is specific to the Swift storage backend. Optional. Default: 2 A string indicating which version of Swift OpenStack authentication
to use. See the project python-swiftclient for more details."
28,swift_store_endpoint_type,auth_version,"Can only be specified in configuration files. This option is specific to the Swift storage backend. Optional. Default: publicURL A string giving the endpoint type of the swift service endpoint to
use. This setting is only used if swift_store_auth_version is 2 .","A version of the authentication service to use.
Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace. Optional. Default: 2"
29,swift_store_ssl_compression,enabled,"Can only be specified in configuration files. This option is specific to the Swift storage backend. Optional. Default: True. If set to False, disables SSL layer compression of https swift
requests. Setting to ‘False’ may improve performance for images which
are already in a compressed format, e.g. qcow2. If set to True then
compression will be enabled (provided it is supported by the swift
proxy).","Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling."
30,key,user,"An authentication key for a user authenticating against the Swift
authentication service.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
31,project_domain_id,auth_version,"A domain ID of the project which is the requested project-level
authorization scope. Optional. Default: None This option can be specified if ``auth_version` is 3 .`","A version of the authentication service to use.
Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace. Optional. Default: 2"
32,project_domain_name,auth_version,"A domain name of the project which is the requested project-level
authorization scope. Optional. Default: None This option can be specified if ``auth_version` is 3 .`","A version of the authentication service to use.
Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace. Optional. Default: 2"
33,user_domain_id,user,"A domain ID of the user which is the requested domain-level
authorization scope. Optional. Default: None This option can be specified if ``auth_version` is 3 .`","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
34,user_domain_id,auth_version,"A domain ID of the user which is the requested domain-level
authorization scope. Optional. Default: None This option can be specified if ``auth_version` is 3 .`","A version of the authentication service to use.
Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace. Optional. Default: 2"
35,user_domain_name,user,"A domain name of the user which is the requested domain-level
authorization scope. Optional. Default: None This option can be specified if ``auth_version` is 3 . `","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
36,user_domain_name,auth_version,"A domain name of the user which is the requested domain-level
authorization scope. Optional. Default: None This option can be specified if ``auth_version` is 3 . `","A version of the authentication service to use.
Valid versions are 2 and 3 for Keystone and 1 (deprecated) for Swauth and Rackspace. Optional. Default: 2"
37,rbd_store_user,user,"Optional. Default: admin Can only be specified in configuration files. This option is specific to the RBD storage backend. Sets the RADOS user to authenticate as. This is only needed
when RADOS authentication is enabled.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
38,rbd_store_user,enabled,"Optional. Default: admin Can only be specified in configuration files. This option is specific to the RBD storage backend. Sets the RADOS user to authenticate as. This is only needed
when RADOS authentication is enabled.","Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling."
39,os_region_name,cinder_os_region_name,Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Region name of this node. Deprecated. Use cinder_os_region_name instead.,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Region name of this node.  If specified, it is used to locate cinder from
the service catalog."
40,cinder_store_user_name,user,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
41,cinder_store_user_name,auth_address,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects.",An address where the Swift authentication service is located.
42,cinder_store_user_name,cinder_store_password,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
43,cinder_store_user_name,cinder_store_project_name,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
44,cinder_store_user_name,cinder_store_auth_address,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
45,cinder_store_user_domain_name,user,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the user to authenticate against cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
46,cinder_store_user_domain_name,auth_address,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the user to authenticate against cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.",An address where the Swift authentication service is located.
47,cinder_store_user_domain_name,cinder_store_user_name,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the user to authenticate against cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects."
48,cinder_store_user_domain_name,cinder_store_password,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the user to authenticate against cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
49,cinder_store_user_domain_name,cinder_store_project_name,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the user to authenticate against cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
50,cinder_store_user_domain_name,cinder_store_auth_address,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the user to authenticate against cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
51,cinder_store_password,user,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
52,cinder_store_password,auth_address,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.",An address where the Swift authentication service is located.
53,cinder_store_password,cinder_store_user_name,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects."
54,cinder_store_password,cinder_store_project_name,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
55,cinder_store_password,cinder_store_auth_address,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
56,cinder_store_project_name,user,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
57,cinder_store_project_name,auth_address,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.",An address where the Swift authentication service is located.
58,cinder_store_project_name,cinder_store_user_name,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects."
59,cinder_store_project_name,cinder_store_password,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
60,cinder_store_project_name,cinder_store_auth_address,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
61,cinder_store_project_domain_name,user,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the project where the image volume is stored in cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
62,cinder_store_project_domain_name,auth_address,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the project where the image volume is stored in cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.",An address where the Swift authentication service is located.
63,cinder_store_project_domain_name,cinder_store_user_name,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the project where the image volume is stored in cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects."
64,cinder_store_project_domain_name,cinder_store_password,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the project where the image volume is stored in cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
65,cinder_store_project_domain_name,cinder_store_project_name,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the project where the image volume is stored in cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
66,cinder_store_project_domain_name,cinder_store_auth_address,"Optional. Default: Default Can only be specified in configuration files. This option is specific to the Cinder storage backend. Domain of the project where the image volume is stored in cinder. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
67,cinder_store_auth_address,user,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
68,cinder_store_auth_address,auth_address,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.",An address where the Swift authentication service is located.
69,cinder_store_auth_address,cinder_store_user_name,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. User name to authenticate against Cinder. If <None>, the user of current
context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.
These options are useful to put image volumes into the internal service
project in order to hide the volume from users, and to make the image
shareable among projects."
70,cinder_store_auth_address,cinder_store_password,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Password for the user authenticating against Cinder. If <None>, the current
context auth token is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
71,cinder_store_auth_address,cinder_store_project_name,"Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. The address where the Cinder authentication service is listening. If <None>,
the cinder endpoint in the service catalog is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set.","Optional. Default: None Can only be specified in configuration files. This option is specific to the Cinder storage backend. Project name where the image is stored in Cinder. If <None>, the project
in current context is used. NOTE : This option is applied only if all of cinder_store_user_name , cinder_store_password , cinder_store_project_name and cinder_store_auth_address are set."
72,s3_store_bucket,s3_store_create_bucket_on_put,"Can only be specified in configuration files. Bucket name where the glance images will be stored in the S3.
If s3_store_create_bucket_on_put is set to true, it will be created
automatically even if the bucket does not exist.","Optional. Default: False Can only be specified in configuration files. Determine whether S3 should create a new bucket. This option takes boolean
value to indicate whether or not Glance should create new bucket to S3 if it
does not exist."
73,user_storage_quota,user,"Optional. Default: 0 (Unlimited). This value specifies the maximum amount of storage that each user can use
across all storage systems. Optionally unit can be specified for the value.
Values are accepted in B, KB, MB, GB or TB which are for Bytes, KiloBytes,
MegaBytes, GigaBytes and TeraBytes respectively. Default unit is Bytes. user_storage_quota=20GB","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
74,image_cache_dir,user,"Required when image cache middleware is enabled. Default: /var/lib/glance/image-cache This is the base directory the image cache can write files to.
Make sure the directory is writable by the user running the glance-api server","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
75,image_cache_dir,enabled,"Required when image cache middleware is enabled. Default: /var/lib/glance/image-cache This is the base directory the image cache can write files to.
Make sure the directory is writable by the user running the glance-api server","Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling."
76,image_cache_driver,user,"Optional. Choice of sqlite , xattr or centralized_db Default: centralized_db The default centralized_db cache driver has no special
dependencies, other than worker_self_reference_url which needs
to be configured to store the reference of node in the database.
Earlier cache database used to be independent for each glance api
service, now with centralized_db cache driver it stores
information about the cached files at one place which is in
a central database. Old records from SQLite database will
be migrated to
central database on service restart during upgrade process. The sqlite cache driver has no special dependencies, other
than the python-sqlite3 library, which is installed on virtually
all operating systems with modern versions of Python. It stores
information about the cached files in a SQLite database. NOTE In Caracal release sqlite cache driver has been deprecated and will
be removed in F development cycle. The xattr cache driver required the python-xattr>=0.6.0 library
and requires that the filesystem containing image_cache_dir have
access times tracked for all files (in other words, the noatime option
CANNOT be set for that filesystem). In addition, user_xattr must be
set on the filesystem’s description line in fstab.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
77,image_cache_driver,image_cache_dir,"Optional. Choice of sqlite , xattr or centralized_db Default: centralized_db The default centralized_db cache driver has no special
dependencies, other than worker_self_reference_url which needs
to be configured to store the reference of node in the database.
Earlier cache database used to be independent for each glance api
service, now with centralized_db cache driver it stores
information about the cached files at one place which is in
a central database. Old records from SQLite database will
be migrated to
central database on service restart during upgrade process. The sqlite cache driver has no special dependencies, other
than the python-sqlite3 library, which is installed on virtually
all operating systems with modern versions of Python. It stores
information about the cached files in a SQLite database. NOTE In Caracal release sqlite cache driver has been deprecated and will
be removed in F development cycle. The xattr cache driver required the python-xattr>=0.6.0 library
and requires that the filesystem containing image_cache_dir have
access times tracked for all files (in other words, the noatime option
CANNOT be set for that filesystem). In addition, user_xattr must be
set on the filesystem’s description line in fstab.","Required when image cache middleware is enabled. Default: /var/lib/glance/image-cache This is the base directory the image cache can write files to.
Make sure the directory is writable by the user running the glance-api server"
78,image_cache_sqlite_db,image_cache_dir,"Optional. Default: cache.db When using the sqlite cache driver, you can set the name of the database
that will be used to store the cached images information. The database
is always contained in the image_cache_dir . NOTE In Caracal release image_cache_sqlite_db option has been deprecated
and will be removed in F development cycle.","Required when image cache middleware is enabled. Default: /var/lib/glance/image-cache This is the base directory the image cache can write files to.
Make sure the directory is writable by the user running the glance-api server"
79,image_cache_dir,user,"Required when image cache middleware is enabled. Default: /var/lib/glance/image-cache This is the base directory the image cache can write files to.
Make sure the directory is writable by the user running the glance-api server","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
80,image_cache_dir,enabled,"Required when image cache middleware is enabled. Default: /var/lib/glance/image-cache This is the base directory the image cache can write files to.
Make sure the directory is writable by the user running the glance-api server","Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling."
81,image_cache_driver,user,"Optional. Choice of sqlite , xattr or centralized_db Default: centralized_db The default centralized_db cache driver has no special
dependencies, other than worker_self_reference_url which needs
to be configured to store the reference of node in the database.
Earlier cache database used to be independent for each glance api
service, now with centralized_db cache driver it stores
information about the cached files at one place which is in
a central database. Old records from SQLite database will
be migrated to
central database on service restart during upgrade process. The sqlite cache driver has no special dependencies, other
than the python-sqlite3 library, which is installed on virtually
all operating systems with modern versions of Python. It stores
information about the cached files in a SQLite database. NOTE In Caracal release sqlite cache driver has been deprecated and will
be removed in F development cycle. The xattr cache driver required the python-xattr>=0.6.0 library
and requires that the filesystem containing image_cache_dir have
access times tracked for all files (in other words, the noatime option
CANNOT be set for that filesystem). In addition, user_xattr must be
set on the filesystem’s description line in fstab.","A project_name user_name pair in the project_name:user_name format
to authenticate against the Swift authentication service."
82,image_cache_driver,image_cache_dir,"Optional. Choice of sqlite , xattr or centralized_db Default: centralized_db The default centralized_db cache driver has no special
dependencies, other than worker_self_reference_url which needs
to be configured to store the reference of node in the database.
Earlier cache database used to be independent for each glance api
service, now with centralized_db cache driver it stores
information about the cached files at one place which is in
a central database. Old records from SQLite database will
be migrated to
central database on service restart during upgrade process. The sqlite cache driver has no special dependencies, other
than the python-sqlite3 library, which is installed on virtually
all operating systems with modern versions of Python. It stores
information about the cached files in a SQLite database. NOTE In Caracal release sqlite cache driver has been deprecated and will
be removed in F development cycle. The xattr cache driver required the python-xattr>=0.6.0 library
and requires that the filesystem containing image_cache_dir have
access times tracked for all files (in other words, the noatime option
CANNOT be set for that filesystem). In addition, user_xattr must be
set on the filesystem’s description line in fstab.","Required when image cache middleware is enabled. Default: /var/lib/glance/image-cache This is the base directory the image cache can write files to.
Make sure the directory is writable by the user running the glance-api server"
83,image_cache_sqlite_db,image_cache_dir,"Optional. Default: cache.db When using the sqlite cache driver, you can set the name of the database
that will be used to store the cached images information. The database
is always contained in the image_cache_dir . NOTE In Caracal release image_cache_sqlite_db option has been deprecated
and will be removed in F development cycle.","Required when image cache middleware is enabled. Default: /var/lib/glance/image-cache This is the base directory the image cache can write files to.
Make sure the directory is writable by the user running the glance-api server"
84,property_protection_file,enabled,"Optional. Default: not enabled. If property_protection_file is set, the file may use either roles or policies
to specify property protections.","Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling."
85,task_time_to_live,task_executor,"Optional. Default: 48 The config value task_executor is used to determine which executor
should be used by the Glance service to process the task. The currently
available implementation is: taskflow .","Optional. Default: taskflow The taskflow engine has its own set of configuration options,
under the taskflow_executor section, that can be tuned to improve
the task execution process. Among the available options, you may find engine_mode and max_workers . The former allows for selecting
an execution model and the available options are serial , parallel and worker-based . The max_workers option,
instead, allows for controlling the number of workers that will be
instantiated per executor instance. The default value for the engine_mode is parallel , whereas
the default number of max_workers is 10 ."
86,task_executor,workers,"Optional. Default: taskflow The taskflow engine has its own set of configuration options,
under the taskflow_executor section, that can be tuned to improve
the task execution process. Among the available options, you may find engine_mode and max_workers . The former allows for selecting
an execution model and the available options are serial , parallel and worker-based . The max_workers option,
instead, allows for controlling the number of workers that will be
instantiated per executor instance. The default value for the engine_mode is parallel , whereas
the default number of max_workers is 10 .","Number of Glance API worker processes to start. Each worker process will
listen on the same port. Increasing this value may increase performance
(especially if using SSL with compression enabled). Typically it is
recommended to have one worker process per CPU. The value 0 will prevent
any new worker processes from being created. Optional. Default: The number of CPUs available will be used by default."
87,enabled,key,"Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling.","An authentication key for a user authenticating against the Swift
authentication service."
88,enabled,hmac_keys,"Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling.","Optional. Default: SECRET_KEY IMPORTANT NOTE : in order to make profiling work as designed operator
needs to make those values of HMAC key be consistent for all services
in their deployment. Without HMAC key the profiling will not be triggered
even profiling feature is enabled. The config value trace_sqlalchemy is used to determine whether fully
enable sqlalchemy engine based SQL execution profiling feature for glance-api
service."
89,hmac_keys,key,"Optional. Default: SECRET_KEY IMPORTANT NOTE : in order to make profiling work as designed operator
needs to make those values of HMAC key be consistent for all services
in their deployment. Without HMAC key the profiling will not be triggered
even profiling feature is enabled. The config value trace_sqlalchemy is used to determine whether fully
enable sqlalchemy engine based SQL execution profiling feature for glance-api
service.","An authentication key for a user authenticating against the Swift
authentication service."
90,hmac_keys,enabled,"Optional. Default: SECRET_KEY IMPORTANT NOTE : in order to make profiling work as designed operator
needs to make those values of HMAC key be consistent for all services
in their deployment. Without HMAC key the profiling will not be triggered
even profiling feature is enabled. The config value trace_sqlalchemy is used to determine whether fully
enable sqlalchemy engine based SQL execution profiling feature for glance-api
service.","Optional. Default: False There is one more configuration option that needs to be defined to enable
Glance services profiling. The config value hmac_keys is used for
encrypting context data for performance profiling."
91,hmac_keys,trace_sqlalchemy,"Optional. Default: SECRET_KEY IMPORTANT NOTE : in order to make profiling work as designed operator
needs to make those values of HMAC key be consistent for all services
in their deployment. Without HMAC key the profiling will not be triggered
even profiling feature is enabled. The config value trace_sqlalchemy is used to determine whether fully
enable sqlalchemy engine based SQL execution profiling feature for glance-api
service.",Optional. Default: False
