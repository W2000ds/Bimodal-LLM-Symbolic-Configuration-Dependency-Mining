id,param1,param2,bnf,type
1,fs.adl.oauth2.access.token.provider.type,fs.adl.oauth2.refresh.url,{(fs.adl.oauth2.access.token.provider.type = 'ClientCredential') => (fs.adl.oauth2.refresh.url != null)},control
2,mapreduce.shuffle.transferTo.allowed,mapreduce.shuffle.transfer.buffer.size,{(mapreduce.shuffle.transferTo.allowed = false) => (mapreduce.shuffle.transfer.buffer.size != null)},control
3,rpc.metrics.percentiles.intervals,rpc.metrics.quantile.enable,"{(rpc.metrics.quantile.enable = true) => (rpc.metrics.percentiles.intervals in {""ANY""} && rpc.metrics.percentiles.intervals != null)}",control
4,fs.adl.oauth2.access.token.provider.type,fs.adl.oauth2.msi.port,"{(fs.adl.oauth2.access.token.provider.type = 'MSI') => (fs.adl.oauth2.msi.port != null) && (fs.adl.oauth2.msi.port in {50342, 50343, 50344})}",value
5,fs.adl.oauth2.access.token.provider.type,fs.adl.oauth2.client.id,{(fs.adl.oauth2.access.token.provider.type = 'ClientCredential') => (fs.adl.oauth2.client.id != null) && (fs.adl.oauth2.access.token.provider.type = 'RefreshToken') => (fs.adl.oauth2.client.id != null)},control
6,fs.adl.oauth2.access.token.provider.type,fs.adl.oauth2.credential,{(fs.adl.oauth2.access.token.provider.type = 'ClientCredential') => (fs.adl.oauth2.credential != null)},control
7,fs.adl.oauth2.access.token.provider.type,fs.adl.oauth2.access.token.provider,{(fs.adl.oauth2.access.token.provider.type = 'Custom') => (fs.adl.oauth2.access.token.provider != null)},control
8,fs.adl.oauth2.access.token.provider.type,fs.adl.oauth2.devicecode.clientapp.id,{(fs.adl.oauth2.access.token.provider.type = 'DeviceCode') => (fs.adl.oauth2.devicecode.clientapp.id != null)},control
9,fs.adl.oauth2.access.token.provider.type,fs.adl.oauth2.refresh.token,{(fs.adl.oauth2.access.token.provider.type = 'RefreshToken') => (fs.adl.oauth2.refresh.token != null)},control
10,fs.client.resolve.topology.enabled,net.topology.node.switch.mapping.impl,{(fs.client.resolve.topology.enabled = true) => (net.topology.node.switch.mapping.impl != null)},control
11,net.topology.node.switch.mapping.impl,net.topology.table.file.name,{(net.topology.node.switch.mapping.impl = 'org.apache.hadoop.net.ScriptBasedMapping') => (net.topology.table.file.name != null)},control
12,dfs.datanode.fsdataset.volume.choosing.policy,dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold,{(dfs.datanode.fsdataset.volume.choosing.policy = 'org.apache.hadoop.hdfs.server.datanode.fsdataset') => (dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold != null)},control
13,dfs.block.replicator.classname,dfs.namenode.available-space-block-placement-policy.balanced-space-preference-fraction,{(dfs.block.replicator.classname = 'org.apache.hadoop.hdfs.server.blockmanagement.AvailableSpaceBlockPlacementPolicy') => (dfs.namenode.available-space-block-placement-policy.balanced-space-preference-fraction in [0.0 .. 1.0])},value
14,dfs.datanode.fsdataset.volume.choosing.policy,dfs.datanode.available-space-volume-choosing-policy.balanced-space-preference-fraction,{(dfs.datanode.fsdataset.volume.choosing.policy = 'org.apache.hadoop.hdfs.server.datanode.fsdataset.AvailableSpaceVolumeChoosingPolicy') => (dfs.datanode.available-space-volume-choosing-policy.balanced-space-preference-fraction != null)},control
15,yarn.resourcemanager.configuration.provider-class,yarn.resourcemanager.configuration.file-system-based-store,{(yarn.resourcemanager.configuration.provider-class = 'org.apache.hadoop.yarn.FileSystemBasedConfigurationProvider') => (yarn.resourcemanager.configuration.file-system-based-store = ANY)},overwrite
16,yarn.nodemanager.node-labels.provider,yarn.nodemanager.node-labels.provider.fetch-interval-ms,"{(yarn.nodemanager.node-labels.provider in {""config"", ""Script""}) => (yarn.nodemanager.node-labels.provider.fetch-interval-ms > 0)}",value
17,yarn.scheduler.configuration.store.class,yarn.scheduler.configuration.store.max-logs,"{(yarn.scheduler.configuration.store.class in {""leveldb"", ""zk""}) => (yarn.scheduler.configuration.store.max-logs > 0)}",value
18,yarn.scheduler.configuration.store.class,yarn.scheduler.configuration.leveldb-store.path,"{(yarn.scheduler.configuration.store.class = ""leveldb"") => (yarn.scheduler.configuration.leveldb-store.path != null)}",control
19,yarn.resourcemanager.scheduler.monitor.enable,yarn.resourcemanager.scheduler.monitor.policies,{(yarn.resourcemanager.scheduler.monitor.enable = true) => (yarn.resourcemanager.scheduler.monitor.policies != null)},control
20,dfs.namenode.lifeline.rpc-address,dfs.namenode.lifeline.handler.count,{(dfs.namenode.lifeline.rpc-address != null) => (dfs.namenode.lifeline.handler.count >= 0)},value
21,yarn.nodemanager.resource.cpu-vcores,yarn.nodemanager.resource.pcores-vcores-multiplier,{(yarn.nodemanager.resource.cpu-vcores = -1) && (yarn.nodemanager.resource.detect-hardware-capabilities = true) => (yarn.nodemanager.resource.cpu-vcores in {yarn.nodemanager.resource.pcores-vcores-multiplier * ANY})},value
22,yarn.nodemanager.node-labels.provider,yarn.nodemanager.node-labels.provider.fetch-timeout-ms,{(yarn.nodemanager.node-labels.provider = 'Script') => (yarn.nodemanager.node-labels.provider.fetch-timeout-ms > 0)},value
23,yarn.nodemanager.resource.memory-mb,yarn.nodemanager.resource.system-reserved-memory-mb,{(yarn.nodemanager.resource.detect-hardware-capabilities = true) && (yarn.nodemanager.resource.memory-mb = -1) => (yarn.nodemanager.resource.system-reserved-memory-mb >= 0)},value
24,yarn.nodemanager.node-labels.provider,yarn.nodemanager.node-labels.provider.configured-node-partition,{(yarn.nodemanager.node-labels.provider = 'config') => (yarn.nodemanager.node-labels.provider.configured-node-partition != null)},control
25,hadoop.security.group.mapping.ldap.ssl.keystore.password,hadoop.security.group.mapping.ldap.ssl.keystore.password.file,{(hadoop.security.group.mapping.ldap.ssl.keystore.password = null) => (hadoop.security.group.mapping.ldap.ssl.keystore.password.file != null)},default
26,hbase.offpeak.start.hour,hbase.hstore.compaction.ratio.offpeak,{(hbase.offpeak.start.hour != null) => (hbase.hstore.compaction.ratio.offpeak != null)},control
27,hbase.offpeak.end.hour,hbase.hstore.compaction.ratio.offpeak,{(hbase.offpeak.end.hour != null) => (hbase.offpeak.start.hour != null) && (hbase.hstore.compaction.ratio.offpeak != 'ANY')},control
28,yarn.scheduler.configuration.store.class,yarn.scheduler.configuration.leveldb-store.compaction-interval-secs,{(yarn.scheduler.configuration.store.class = 'leveldb') => (yarn.scheduler.configuration.leveldb-store.compaction-interval-secs in [1..default.MAX_VALUE])},value
29,dfs.namenode.lifeline.rpc-address,dfs.namenode.lifeline.handler.ratio,{(dfs.namenode.lifeline.rpc-address != null) => (dfs.namenode.lifeline.handler.ratio = ANY)},overwrite
30,mapreduce.jobhistory.loadedtasks.cache.size,mapreduce.jobhistory.loadedjobs.cache.size,{(mapreduce.jobhistory.loadedtasks.cache.size <= 0 || mapreduce.jobhistory.loadedtasks.cache.size = null) => (mapreduce.jobhistory.loadedjobs.cache.size > 0)},value
31,hbase.master.infoserver.redirect,hbase.master.info.port,{(hbase.master.infoserver.redirect = true) => (hbase.master.info.port != null)},control
32,fs.s3a.multipart.purge,fs.s3a.multipart.purge.age,{(fs.s3a.multipart.purge = true) => (fs.s3a.multipart.purge.age >= 0)},value
33,dfs.client.read.shortcircuit,dfs.client.domain.socket.data.traffic,{(dfs.client.read.shortcircuit = true) => (dfs.client.domain.socket.data.traffic = ANY)},control
34,dfs.client.read.shortcircuit,dfs.client.read.shortcircuit.skip.checksum,{(dfs.client.read.shortcircuit = true) => (dfs.client.read.shortcircuit.skip.checksum = ANY)},control
35,dfs.client.read.shortcircuit,dfs.client.read.shortcircuit.buffer.size,{(dfs.client.read.shortcircuit = true) => (dfs.client.read.shortcircuit.buffer.size > 0)},value
36,dfs.client.read.shortcircuit,dfs.client.read.shortcircuit.streams.cache.size,{(dfs.client.read.shortcircuit = true) => (dfs.client.read.shortcircuit.streams.cache.size > 0)},value
37,dfs.client.read.shortcircuit,dfs.client.read.shortcircuit.streams.cache.expiry.ms,{(dfs.client.read.shortcircuit = true) => (dfs.client.read.shortcircuit.streams.cache.expiry.ms > 0)},value
38,hbase.defaults.for.version.skip,hbase.defaults.for.version,{(hbase.defaults.for.version.skip = true) => (hbase.defaults.for.version = ANY)},overwrite
39,hadoop.security.saslproperties.resolver.class,hadoop.rpc.protection,{(hadoop.security.saslproperties.resolver.class != null) => (hadoop.rpc.protection = ANY)},overwrite
40,hadoop.security.saslproperties.resolver.class,hadoop.rpc.protection.non-whitelist,{(hadoop.security.saslproperties.resolver.class != null) => (hadoop.rpc.protection.non-whitelist = ANY)},overwrite
41,hadoop.security.group.mapping.ldap.bind.password,hadoop.security.group.mapping.ldap.bind.password.file,{(hadoop.security.group.mapping.ldap.bind.password = null) => (hadoop.security.group.mapping.ldap.bind.password.file != null)},overwrite
42,dfs.namenode.lifeline.handler.count,dfs.namenode.lifeline.handler.ratio,{(dfs.namenode.lifeline.handler.count != null) => (dfs.namenode.lifeline.handler.ratio = ANY)},overwrite
43,yarn.resourcemanager.store.class,yarn.resourcemanager.zk-state-store.parent-path,{(yarn.resourcemanager.store.class != 'org.apache.hadoop.yarn.server.resourcemanager.recovery.NullRMStateStore') => (dfs.datanode.max.locked.memory > 0)},behavior
44,yarn.resourcemanager.store.class,yarn.resourcemanager.fs.state-store.uri,{(yarn.resourcemanager.store.class = 'org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore') => (yarn.resourcemanager.fs.state-store.uri = null)},overwrite
45,dfs.balancer.keytab.enabled,dfs.balancer.keytab.file,{(dfs.balancer.keytab.enabled = true) => (dfs.balancer.keytab.file != null)},control
46,fs.azure.secure.mode,fs.azure.local.sas.key.mode,{(fs.azure.secure.mode = false) => (fs.azure.local.sas.key.mode = ANY) && (fs.azure.secure.mode = true) => (fs.azure.local.sas.key.mode = true)},control
47,fs.azure.authorization,fs.azure.enable.spnego.token.cache,{(fs.azure.authorization = true) => (fs.azure.enable.spnego.token.cache = ANY) && (fs.azure.secure.mode = false) => (fs.azure.authorization = false)},control
48,hadoop.security.groups.cache.background.reload,hadoop.security.groups.cache.background.reload.threads,{(hadoop.security.groups.cache.background.reload = true) => (hadoop.security.groups.cache.background.reload.threads > 0)},value
49,fs.s3a.fast.upload,fs.s3a.fast.upload.buffer,{(fs.s3a.fast.upload = true) => (fs.s3a.fast.upload.buffer != null)},control
50,ipc.client.ping,ipc.ping.interval,{(ipc.client.ping = true) => (ipc.ping.interval > 0)},value
51,dfs.datanode.sync.behind.writes,dfs.datanode.sync.behind.writes.in.background,{(dfs.datanode.sync.behind.writes = true) => (dfs.datanode.sync.behind.writes.in.background = ANY)},behavior
52,dfs.balancer.keytab.enabled,dfs.balancer.address,{(dfs.balancer.keytab.enabled = true) => (dfs.balancer.address != null)},control
53,dfs.webhdfs.rest-csrf.enabled,dfs.webhdfs.rest-csrf.custom-header,{(dfs.webhdfs.rest-csrf.enabled = true) => (dfs.client.block.write.replace-datanode-on-failure.enable = true)},control
54,yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users,yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user,{(dfs.client.block.write.replace-datanode-on-failure.enable = true) => (yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users = ANY) && (yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user = ANY)},behavior
55,yarn.nodemanager.resource.detect-hardware-capabilities,yarn.nodemanager.resource.system-reserved-memory-mb,{(yarn.nodemanager.resource.detect-hardware-capabilities = true) => (yarn.nodemanager.resource.system-reserved-memory-mb >= 0)},value
56,yarn.nodemanager.resource.detect-hardware-capabilities,yarn.nodemanager.resource.count-logical-processors-as-cores,{(yarn.nodemanager.resource.cpu-vcores = -1) && (yarn.nodemanager.resource.detect-hardware-capabilities = true) => (yarn.nodemanager.resource.count-logical-processors-as-cores = ANY)},control
57,yarn.nodemanager.resource.detect-hardware-capabilities,yarn.nodemanager.resource.pcores-vcores-multiplier,{(yarn.nodemanager.resource.detect-hardware-capabilities = true) => (yarn.nodemanager.resource.pcores-vcores-multiplier > 0)},value
58,mapreduce.task.profile,mapreduce.task.profile.reduces,{(mapreduce.task.profile = true) => (mapreduce.task.profile.reduces in ANY)},control
59,mapreduce.task.profile,mapreduce.task.profile.maps,{(mapreduce.task.profile = true) => (mapreduce.task.profile.maps in ANY)},control
60,mapreduce.job.classloader,mapreduce.job.classloader.system.classes,{(mapreduce.job.classloader = true) => (mapreduce.job.classloader.system.classes != null)},control
61,hbase.coprocessor.enabled,hbase.coprocessor.user.enabled,{(hbase.coprocessor.enabled = false) => (hbase.coprocessor.user.enabled = ANY)},overwrite
62,hbase.rest.csrf.enabled,hbase.rest-csrf.browser-useragents-regex,{(hbase.rest.csrf.enabled = true) => (hbase.rest-csrf.browser-useragents-regex != null)},control
63,hadoop.security.group.mapping.ldap.ssl,hadoop.security.group.mapping.ldap.ssl.truststore,{(hadoop.security.group.mapping.ldap.ssl = true) => (hadoop.security.group.mapping.ldap.ssl.truststore != null)},control
64,hadoop.security.group.mapping.ldap.ssl,hadoop.security.group.mapping.ldap.ssl.keystore.password,{(hadoop.security.group.mapping.ldap.ssl = true) => (hadoop.security.group.mapping.ldap.ssl.keystore.password != null)},control
65,hadoop.security.group.mapping.ldap.ssl,hadoop.security.group.mapping.ldap.ssl.truststore.password.file,{(hadoop.security.group.mapping.ldap.ssl = true) => (hadoop.security.group.mapping.ldap.ssl.truststore.password.file != null)},control
66,hadoop.registry.secure,hadoop.registry.jaas.context,{(hadoop.registry.secure = true) => (hadoop.registry.jaas.context != null)},control
67,hadoop.security.group.mapping.ldap.ssl,hadoop.security.group.mapping.ldap.ssl.keystore,{(hadoop.security.group.mapping.ldap.ssl = true) => (hadoop.security.group.mapping.ldap.ssl.keystore != null)},control
68,hadoop.security.dns.log-slow-lookups.enabled,hadoop.security.dns.log-slow-lookups.threshold.ms,{(hadoop.security.dns.log-slow-lookups.enabled = true) => (hadoop.security.dns.log-slow-lookups.threshold.ms > 0)},value
69,hadoop.ssl.enabled,hadoop.ssl.enabled.protocols,{(hadoop.ssl.enabled = true) => (hadoop.ssl.enabled.protocols != null)},control
70,dfs.namenode.replication.considerLoad,dfs.namenode.replication.considerLoad.factor,{(dfs.namenode.replication.considerLoad = true) => (dfs.namenode.replication.considerLoad.factor > 1)},value
71,dfs.encrypt.data.transfer.cipher.suites,dfs.encrypt.data.transfer.cipher.key.bitlength,"{(dfs.encrypt.data.transfer.cipher.suites = 'AES/CTR/NoPadding') => (dfs.encrypt.data.transfer.cipher.key.bitlength in {128, 192, 256}) && (dfs.encrypt.data.transfer.cipher.suites != null) && (dfs.encrypt.data.transfer.cipher.key.bitlength != null)}",value
72,yarn.resourcemanager.ha.enabled,yarn.client.failover-sleep-max-ms,{(yarn.resourcemanager.ha.enabled = true) => (yarn.client.failover-sleep-max-ms > 0)},value
73,yarn.resourcemanager.ha.enabled,yarn.resourcemanager.ha.automatic-failover.enabled,{(yarn.resourcemanager.ha.enabled = true) => (yarn.resourcemanager.ha.automatic-failover.enabled = true)},control
74,yarn.resourcemanager.ha.enabled,yarn.client.failover-max-attempts,{(yarn.resourcemanager.ha.enabled = true) => (yarn.client.failover-max-attempts > 0)},value
75,yarn.resourcemanager.ha.enabled,yarn.client.failover-sleep-base-ms,{(yarn.resourcemanager.ha.enabled = true) => (yarn.client.failover-sleep-base-ms > 0)},value
76,yarn.acl.enable,yarn.acl.reservation-enable,{(yarn.acl.enable = true) => (yarn.acl.reservation-enable = ANY)},control
77,yarn.nodemanager.recovery.enabled,yarn.nodemanager.recovery.dir,{(yarn.nodemanager.recovery.enabled = true) => (yarn.nodemanager.recovery.dir != null)},control
78,yarn.resourcemanager.ha.enabled,yarn.resourcemanager.ha.automatic-failover.embedded,{(yarn.resourcemanager.ha.enabled = true) => (yarn.resourcemanager.ha.automatic-failover.embedded = ANY)},control
79,mapreduce.map.output.compress,mapreduce.map.output.compress.codec,{(mapreduce.map.output.compress = true) => (mapreduce.map.output.compress.codec != null)},control
80,mapreduce.output.fileoutputformat.compress,mapreduce.output.fileoutputformat.compress.type,"{(mapreduce.output.fileoutputformat.compress = true) => (mapreduce.output.fileoutputformat.compress.type in {""BLOCK"", ""RECORD""})}",value
81,mapreduce.ifile.readahead,mapreduce.ifile.readahead.bytes,{(mapreduce.ifile.readahead = true) => (mapreduce.ifile.readahead.bytes > 0) && (mapreduce.ifile.readahead.bytes != null)},value
82,mapreduce.output.fileoutputformat.compress,mapreduce.output.fileoutputformat.compress.codec,{(mapreduce.output.fileoutputformat.compress = true) => (mapreduce.output.fileoutputformat.compress.codec != null)},control
83,hbase.security.authentication,hbase.auth.key.update.interval,{(hbase.security.authentication = 'kerberos') => (hbase.auth.key.update.interval > 0)},value
84,hbase.security.authentication,hbase.auth.token.max.lifetime,{(hbase.security.authentication = 'kerberos') => (hbase.auth.token.max.lifetime > 0)},value
85,mapreduce.job.ubertask.enable,mapreduce.job.ubertask.maxmaps,{(mapreduce.job.ubertask.enable = true) => (mapreduce.job.ubertask.maxmaps > 0)},value
86,mapreduce.job.ubertask.enable,mapreduce.job.ubertask.maxbytes,{(mapreduce.job.ubertask.enable = true) => (mapreduce.job.ubertask.maxbytes > 0) && (mapreduce.job.ubertask.maxbytes != null)},value
87,mapreduce.job.ubertask.enable,mapreduce.job.ubertask.maxreduces,{(mapreduce.job.ubertask.enable = true) => (mapreduce.job.ubertask.maxreduces >= 0) && (mapreduce.job.ubertask.maxreduces != null)},value
88,yarn.timeline-service.recovery.enabled,yarn.timeline-service.state-store-class,{(yarn.timeline-service.recovery.enabled = true) => (yarn.timeline-service.state-store-class != null)},control
89,fs.s3n.multipart.uploads.enabled,fs.s3n.multipart.uploads.block.size,{(fs.s3n.multipart.uploads.enabled = true) => (fs.s3n.multipart.uploads.block.size > 0)},value
90,dfs.xframe.enabled,dfs.xframe.value,"{(dfs.xframe.enabled = true) => (dfs.xframe.value in {""SAMEORIGIN"", ""DENY"", ""ALLOW-FROM""}) && (dfs.xframe.enabled = false) => (dfs.xframe.value = null)}",value
91,dfs.namenode.servicerpc-address,dfs.namenode.service.handler.count,{(dfs.namenode.servicerpc-address != null) => (dfs.namenode.service.handler.count > 0)},value
92,dfs.datanode.max.locked.memory,dfs.cachereport.intervalMsec,{(dfs.datanode.max.locked.memory = 0) => (dfs.cachereport.intervalMsec = ANY)},overwrite
93,dfs.client.read.shortcircuit,dfs.domain.socket.path,{(dfs.client.read.shortcircuit = true) => (dfs.domain.socket.path != null)},control
94,yarn.node-labels.configuration-type,yarn.resourcemanager.node-labels.provider,{(yarn.node-labels.configuration-type = 'distributed') => (yarn.resourcemanager.node-labels.provider != null)},control
95,mapreduce.job.end-notification.retry.attempts,mapreduce.job.end-notification.max.attempts,{(mapreduce.job.end-notification.retry.attempts >= 0) => (mapreduce.job.end-notification.retry.attempts <= mapreduce.job.end-notification.max.attempts)},value
96,mapreduce.job.end-notification.retry.interval,mapreduce.job.end-notification.max.retry.interval,{(mapreduce.job.end-notification.retry.interval >= 0) => (mapreduce.job.end-notification.retry.interval <= mapreduce.job.end-notification.max.retry.interval)},value
97,yarn.resourcemanager.state-store.max-completed-applications,yarn.resourcemanager.max-completed-applications,{(yarn.resourcemanager.state-store.max-completed-applications <= yarn.resourcemanager.max-completed-applications) && (yarn.resourcemanager.state-store.max-completed-applications = yarn.resourcemanager.max-completed-applications)},value
98,fs.trash.checkpoint.interval,fs.trash.interval,{(fs.trash.checkpoint.interval = 0) => (fs.trash.checkpoint.interval = fs.trash.interval) && (fs.trash.checkpoint.interval <= fs.trash.interval)},value
99,dfs.datanode.lifeline.interval.seconds,dfs.heartbeat.interval,{(dfs.datanode.lifeline.interval.seconds > dfs.heartbeat.interval) => (dfs.datanode.lifeline.interval.seconds > 0) && (dfs.heartbeat.interval > 0)},value
100,yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs,yarn.nm.liveness-monitor.expiry-interval-ms,{(yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs > yarn.nm.liveness-monitor.expiry-interval-ms / 1000) => (yarn.nm.liveness-monitor.expiry-interval-ms < yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs * 1000)},value
101,yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs,yarn.nm.liveness-monitor.expiry-interval-ms,{(yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs > yarn.nm.liveness-monitor.expiry-interval-ms) => (yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs > 0) && (yarn.nm.liveness-monitor.expiry-interval-ms > 0)},behavior
102,dfs.namenode.replication.min,dfs.replication,{(dfs.namenode.replication.min >= 1) => (dfs.replication >= dfs.namenode.replication.min) && (dfs.replication != null) && (dfs.namenode.replication.min != null)},value
103,dfs.replication.max,dfs.replication,{(dfs.replication <= dfs.replication.max) => (dfs.replication >= 1) && (dfs.replication.max > 0)},value
104,dfs.namenode.stale.datanode.interval,dfs.namenode.heartbeat.recheck-interval,{(dfs.namenode.stale.datanode.interval > 0) => (dfs.namenode.heartbeat.recheck-interval >= dfs.namenode.stale.datanode.interval)},behavior
105,dfs.namenode.stale.datanode.interval,dfs.namenode.heartbeat,{(dfs.namenode.stale.datanode.interval > 0) => (dfs.namenode.heartbeat.recheck-interval >= dfs.namenode.stale.datanode.interval) && (dfs.namenode.heartbeat != null) && (dfs.namenode.stale.datanode.interval != null)},value
106,dfs.namenode.stale.datanode.interval,dfs.namenode.stale.datanode.minimum.interval,{(dfs.namenode.stale.datanode.interval > 0) => (dfs.namenode.stale.datanode.minimum.interval >= 0) && (dfs.namenode.heartbeat > 0)},value
107,hadoop.registry.zk.retry.ceiling.ms,hadoop.registry.zk.retry.interval.ms,{(hadoop.registry.zk.retry.interval.ms > 0) => (hadoop.registry.zk.retry.ceiling.ms >= hadoop.registry.zk.retry.interval.ms) && (hadoop.registry.zk.retry.ceiling.ms != null) && (hadoop.registry.zk.retry.interval.ms != null)},value
108,hbase.client.pause.cqtbe,hbase.client.pause,{(hbase.client.pause.cqtbe > hbase.client.pause) => (hbase.client.pause.cqtbe > 0) && (hbase.client.pause >= 0)},value
109,dfs.namenode.checkpoint.check.period,dfs.namenode.checkpoint.period,{(dfs.namenode.checkpoint.check.period < dfs.namenode.checkpoint.period) => (dfs.namenode.checkpoint.period > 0)},value
110,dfs.namenode.maintenance.replication.min,dfs.replication,{(dfs.namenode.maintenance.replication.min >= 0) => (dfs.replication >= dfs.namenode.maintenance.replication.min)},value
111,file.bytes-per-checksum,file.stream-buffer-size,{(file.bytes-per-checksum <= file.stream-buffer-size) => (file.bytes-per-checksum in [1..file.stream-buffer-size])},value
112,yarn.scheduler.minimum-allocation-vcores,yarn.nodemanager.resource.cpu-vcores,{(yarn.scheduler.minimum-allocation-vcores >= 1) => (yarn.nodemanager.resource.cpu-vcores >= yarn.scheduler.minimum-allocation-vcores)},value
113,yarn.scheduler.minimum-allocation-mb,yarn.nodemanager.resource.memory-mb,{(yarn.scheduler.minimum-allocation-mb > 0) => (yarn.nodemanager.resource.memory-mb >= yarn.scheduler.minimum-allocation-mb) && (yarn.scheduler.minimum-allocation-mb != null) && (yarn.nodemanager.resource.memory-mb != null)},value
114,yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs,yarn.resourcemanager.rm.container-allocation.expiry-interval-ms,{(yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs > yarn.resourcemanager.rm.container-allocation.expiry-interval-ms) => (yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs > 0) && (yarn.resourcemanager.rm.container-allocation.expiry-interval-ms > 0)},value
115,dfs.balancer.getBlocks.min-block-size,dfs.balancer.getBlocks.size,{(dfs.balancer.getBlocks.min-block-size > 0) => (dfs.balancer.getBlocks.size >= dfs.balancer.getBlocks.min-block-size)},value
116,mapreduce.job.maxtaskfailures.per.tracker,mapreduce.reduce.maxattempts,{(mapreduce.job.maxtaskfailures.per.tracker < mapreduce.reduce.maxattempts) => (mapreduce.job.maxtaskfailures.per.tracker < mapreduce.reduce.maxattempts)},value
117,mapreduce.job.maxtaskfailures.per.tracker,mapreduce.map.maxattempts,{(mapreduce.job.maxtaskfailures.per.tracker < mapreduce.map.maxattempts) => (mapreduce.job.maxtaskfailures.per.tracker < mapreduce.map.maxattempts) && (mapreduce.job.maxtaskfailures.per.tracker != null) && (mapreduce.map.maxattempts != null)},value
118,dfs.namenode.replication.min,dfs.namenode.safemode.replication.min,{(dfs.namenode.safemode.replication.min < dfs.namenode.replication.min) => (dfs.namenode.safemode.replication.min >= dfs.namenode.replication.min)},value
119,dfs.namenode.replication.max-streams-hard-limit,dfs.namenode.replication.max-streams,{(dfs.namenode.replication.max-streams-hard-limit >= dfs.namenode.replication.max-streams) => (dfs.namenode.replication.max-streams >= 0) && (dfs.namenode.replication.max-streams-hard-limit > 0)},value
120,mapreduce.map.java.opts,mapreduce.map.memory.mb,{(mapreduce.map.memory.mb > 0) => (mapreduce.map.java.opts != null)},value
121,yarn.app.attempt.diagnostics.limit.kc,yarn.resourcemanager.state-store.max-completed-applications,{(yarn.resourcemanager.state-store.max-completed-applications > ANY) => (yarn.app.attempt.diagnostics.limit.kc < yarn.resourcemanager.state-store.max-completed-applications)},value
122,dfs.namenode.edits.dir.required,dfs.namenode.edits.dir,{(dfs.namenode.edits.dir.required in dfs.namenode.edits.dir) => (dfs.namenode.edits.dir != null) && (dfs.namenode.edits.dir.required != null)},control
123,dfs.hosts.exclude,dfs.hosts,{(dfs.hosts.exclude != null) => (dfs.hosts != null) && (dfs.hosts.exclude != dfs.hosts)},behavior
124,yarn.resourcemanager.nodes.exclude-path,yarn.resourcemanager.nodes.include-path,{(yarn.resourcemanager.nodes.exclude-path != null) => (yarn.resourcemanager.nodes.include-path != null) && (yarn.resourcemanager.nodes.exclude-path= ANY) && (yarn.resourcemanager.nodes.include-path= ANY)},overwrite
125,fs.s3a.proxy.port,fs.s3a.proxy.host,"{(fs.s3a.proxy.host != null) => (fs.s3a.proxy.port in {80, 443} || fs.s3a.proxy.port = ANY)}",value
126,hadoop.security.dns.nameserver,hadoop.security.dns.interface,{(hadoop.security.dns.nameserver != null) => (hadoop.security.dns.interface != null)},control
127,mapreduce.application.framework.path,mapreduce.application.classpath,{(mapreduce.application.framework.path != null) => (mapreduce.application.classpath in {mapreduce.application.framework.path})},overwrite
128,mapreduce.jobhistory.recovery.enable,mapreduce.jobhistory.recovery.store.class,{(mapreduce.jobhistory.recovery.enable = true) => (mapreduce.jobhistory.recovery.store.class != null)},control
129,hbase.regionserver.hostname.disable.master.reversedns,hbase.regionserver.hostname,{(hbase.regionserver.hostname.disable.master.reversedns = true) => (hbase.regionserver.hostname = null) && (hbase.regionserver.hostname.disable.master.reversedns = false) => (hbase.regionserver.hostname != null)},control
130,fs.s3a.server-side-encryption-algorithm,fs.s3a.server-side-encryption-key,"{(fs.s3a.server-side-encryption-algorithm in {""SSE-KMS"", ""SSE-C""}) => (fs.s3a.server-side-encryption-key != null)}",value
131,yarn.app.mapreduce.am.env,yarn.app.mapreduce.am.admin.user.env,{(yarn.app.mapreduce.am.admin.user.env = ANY) => (yarn.app.mapreduce.am.env = ANY)},overwrite
132,yarn.app.mapreduce.am.command-opts,yarn.app.mapreduce.am.admin-command-opts,{(yarn.app.mapreduce.am.admin-command-opts != null) => (yarn.app.mapreduce.am.command-opts != null)},overwrite
133,mapreduce.job.log4j-properties-file,mapreduce.map.log.level,{(mapreduce.job.log4j-properties-file != null) => (mapreduce.map.log.level = ANY)},overwrite
134,mapreduce.job.log4j-properties-file,yarn.app.mapreduce.am.log.level,{(mapreduce.job.log4j-properties-file != null) => (yarn.app.mapreduce.am.log.level = ANY)},overwrite
135,mapreduce.job.log4j-properties-file,mapreduce.reduce.log.level,{(mapreduce.job.log4j-properties-file != null) => (mapreduce.reduce.log.level = ANY)},overwrite
136,hadoop.security.group.mapping.ldap.userbase,hadoop.security.group.mapping.ldap.base,{(hadoop.security.group.mapping.ldap.userbase = null) => (hadoop.security.group.mapping.ldap.base != null)},control
137,hadoop.security.group.mapping.ldap.groupbase,hadoop.security.group.mapping.ldap.base,{(hadoop.security.group.mapping.ldap.groupbase = null) => (hadoop.security.group.mapping.ldap.base != null)},control
138,dfs.client.read.prefetch.size,dfs.blocksize,{(dfs.blocksize > 0) => (dfs.client.read.prefetch.size = (10 * dfs.blocksize)) && (dfs.blocksize != null) && (dfs.client.read.prefetch.size != null)},value
139,dfs.namenode.edits.dir,dfs.namenode.name.dir,{(dfs.namenode.edits.dir = null) => (dfs.namenode.edits.dir = dfs.namenode.name.dir)},default
140,fs.defaultFS,dfs.namenode.rpc-address,{(fs.defaultFS = null) => (dfs.namenode.rpc-address != null)},default
141,dfs.internal.nameservices,dfs.nameservices,{(dfs.nameservices != null) => (dfs.internal.nameservices = dfs.nameservices)},overwrite
142,dfs.journalnode.kerberos.internal.spnego.principal,dfs.web.authentication.kerberos.keytab,{(dfs.journalnode.kerberos.internal.spnego.principal = '*') => (dfs.web.authentication.kerberos.keytab != null)},control
143,yarn.client.failover-max-attempts,yarn.resourcemanager.connect.max-wait.ms,{(yarn.resourcemanager.connect.max-wait.ms != null) => (yarn.client.failover-max-attempts = ANY)},overwrite
144,yarn.nodemanager.container-monitor.resource-calculator.class,yarn.nodemanager.resource-calculator.class,{(yarn.nodemanager.container-monitor.resource-calculator.class = 'null') => (yarn.nodemanager.container-monitor.resource-calculator.class = yarn.nodemanager.resource-calculator.class)},default
145,yarn.nodemanager.disk-health-checker.disk-utilization-watermark-low-per-disk-percentage,yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage,{(yarn.nodemanager.disk-health-checker.disk-utilization-watermark-low-per-disk-percentage > yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage) => (yarn.nodemanager.disk-health-checker.disk-utilization-watermark-low-per-disk-percentage = yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage)},value
146,yarn.nodemanager.resourcemanager.connect.retry-interval.ms,yarn.resourcemanager.connect.retry-interval.ms,{(yarn.nodemanager.resourcemanager.connect.retry-interval.ms = ANY) => (yarn.nodemanager.resourcemanager.connect.retry-interval.ms = yarn.resourcemanager.connect.retry-interval.ms)},default
147,yarn.client.failover-sleep-max-ms,yarn.resourcemanager.connect.retry-interval.ms,{(yarn.client.failover-sleep-max-ms = null) => (yarn.client.failover-sleep-max-ms = yarn.resourcemanager.connect.retry-interval.ms)},default
148,yarn.resourcemanager.fail-fast,yarn.fail-fast,{(yarn.resourcemanager.fail-fast = ANY) => (yarn.resourcemanager.fail-fast = yarn.fail-fast)},default
149,yarn.nodemanager.resourcemanager.connect.max-wait.ms,yarn.resourcemanager.connect.max-wait.ms,{(yarn.nodemanager.resourcemanager.connect.max-wait.ms = null) => (yarn.nodemanager.resourcemanager.connect.max-wait.ms = yarn.resourcemanager.connect.max-wait.ms)},default
150,yarn.nodemanager.container-monitor.interval-ms,yarn.nodemanager.resource-monitor.interval-ms,{(yarn.nodemanager.container-monitor.interval-ms = null) => (yarn.nodemanager.container-monitor.interval-ms = yarn.nodemanager.resource-monitor.interval-ms)},default
151,yarn.client.failover-sleep-base-ms,yarn.resourcemanager.connect.retry-interval.ms,{(yarn.client.failover-sleep-base-ms = null) => (yarn.client.failover-sleep-base-ms = yarn.resourcemanager.connect.retry-interval.ms)},default
152,mapreduce.task.profile.map.params,mapreduce.task.profile.params,{(mapreduce.task.profile.map.params = mapreduce.task.profile.params)},overwrite
153,mapreduce.task.profile.reduce.params,mapreduce.task.profile.params,{(mapreduce.task.profile.reduce.params = mapreduce.task.profile.params)},overwrite
154,hbase.hstore.compaction.min,hbase.hstore.compactionThreshold,"{(hbase.hstore.compaction.min = hbase.hstore.compactionThreshold) => (hbase.hstore.compactionThreshold in {1, 2, 3, 4, 5, 6, 7, 8, 9, 10})}",value
155,hbase.regionserver.thread.compaction.throttle, hbase.hstore.compaction.max,{(hbase.hstore.compaction.max > 0) => (hbase.regionserver.thread.compaction.throttle = (2 * hbase.hstore.compaction.max * hbase.hregion.memstore.flush.size))},value
156,dfs.namenode.checkpoint.edits.dir,dfs.namenode.checkpoint.dir,{(dfs.namenode.checkpoint.dir = ANY) => (dfs.namenode.checkpoint.edits.dir = dfs.namenode.checkpoint.dir)},default
157,dfs.namenode.kerberos.internal.spnego.principal,dfs.web.authentication.kerberos.principal,{(dfs.namenode.kerberos.internal.spnego.principal != null) => (dfs.web.authentication.kerberos.principal = dfs.namenode.kerberos.internal.spnego.principal)},overwrite
158,yarn.app.mapreduce.am.container.log.limit.kb,yarn.app.mapreduce.am.container.log.backups,{(yarn.app.mapreduce.am.container.log.limit.kb > 0) && (yarn.app.mapreduce.am.container.log.backups > 0) => (CRLA = 'enabled')},value
159,dfs.namenode.edit.log.autoroll.multiplier.threshold,dfs.namenode.checkpoint.txns,{(dfs.namenode.edit.log.autoroll.multiplier.threshold > 0) => (dfs.namenode.checkpoint.txns > 0) && (dfs.namenode.checkpoint.txns != null) && (dfs.namenode.edit.log.autoroll.multiplier.threshold != null)},value
160,yarn.app.mapreduce.shuffle.log.backups,yarn.app.mapreduce.shuffle.log.limit.kb,{(yarn.app.mapreduce.shuffle.log.limit.kb > 0) && (yarn.app.mapreduce.shuffle.log.backups > 0) => (yarn.app.mapreduce.shuffle.log.backups != null) && (yarn.app.mapreduce.shuffle.log.limit.kb != null)},value
161,dfs.namenode.avoid.write.stale.datanode,dfs.namenode.write.stale.datanode.ratio,{(dfs.namenode.avoid.write.stale.datanode = true) => (dfs.namenode.write.stale.datanode.ratio in [0.0..1.0]) && (dfs.namenode.write.stale.datanode.ratio != null)},value
162,dfs.namenode.stale.datanode.interval,dfs.namenode.avoid.read.stale.datanode,{(dfs.namenode.stale.datanode.interval > 0) => (dfs.namenode.avoid.read.stale.datanode = true) && (dfs.namenode.stale.datanode.interval != null) && (dfs.namenode.avoid.read.stale.datanode != null)},value
163,hbase.zookeeper.quorum,hbase.zookeeper.property.clientPort,{(hbase.zookeeper.quorum != null) => (hbase.zookeeper.property.clientPort != null)},control
164,fs.ftp.host,fs.ftp.host.port,{(fs.ftp.host != null) => (fs.ftp.host.port in {21} || fs.ftp.host.port > 0)},value
165,hbase.hregion.majorcompaction,hbase.hregion.majorcompaction.jitter,{(hbase.hregion.majorcompaction > 0) => (hbase.hregion.majorcompaction.jitter >= 0) && (hbase.hregion.majorcompaction.jitter <= hbase.hregion.majorcompaction)},value
166,yarn.nodemanager.remote-app-log-dir-suffix,yarn.nodemanager.remote-app-log-dir,{(yarn.nodemanager.remote-app-log-dir != null) => (yarn.nodemanager.remote-app-log-dir-suffix != 'null') && (yarn.nodemanager.remote-app-log-dir in ANY)},overwrite
167,yarn.timeline-service.enabled,yarn.timeline-service.version,"{(yarn.timeline-service.enabled = true) => (yarn.timeline-service.version in {1.5, 2.0, 3.0}) && (yarn.timeline-service.version != null)}",control
168,hbase.client.pause,hbase.client.retries.number,{(hbase.client.retries.number > 0) => (hbase.client.pause > 0) && (hbase.client.retries.number != null) && (hbase.client.pause != null)},value
169,hbase.client.pause,hbase.client.pause.server.overloaded,{(hbase.client.pause.server.overloaded > hbase.client.pause) => (hbase.client.pause > 0) && (hbase.client.pause.server.overloaded > 0)},value
170,hbase.client.scanner.caching,hbase.client.scanner.max.result.size,{(hbase.client.scanner.caching > 0) => (hbase.client.scanner.max.result.size > 0) && (hbase.client.scanner.caching != null) && (hbase.client.scanner.max.result.size != null)},value
171,hbase.hregion.max.filesize,hbase.hregion.split.overallfiles,{(hbase.hregion.split.overallfiles = true) => (hbase.hregion.max.filesize > 0) && (hbase.hregion.max.filesize != null)},value
172,hfile.block.cache.memory.size,hfile.block.cache.size,{(hfile.block.cache.memory.size != null) => (hfile.block.cache.size = ANY)},overwrite
173,hbase.regionserver.kerberos.principal,hbase.regionserver.keytab.file,{(hbase.regionserver.kerberos.principal != null) => (hbase.regionserver.keytab.file != null)},control
174,hbase.data.umask,hbase.data.umask.enable,{(hbase.data.umask.enable = true) => (hbase.data.umask != null)},control
175,hbase.regionserver.slowlog.buffer.enabled,hbase.regionserver.slowlog.ringbuffer.size,{(hbase.regionserver.slowlog.buffer.enabled = true) => (hbase.regionserver.slowlog.ringbuffer.size > 0)},value
176,hbase.rpc.rows.size.threshold.reject,hbase.rpc.rows.warning.threshold,{(hbase.rpc.rows.size.threshold.reject = true) => (hbase.rpc.rows.warning.threshold > 0) && (hbase.rpc.rows.warning.threshold != null)},value
177,hadoop.security.group.mapping.ldap.ssl,hadoop.security.group.mapping.ldap.ssl.keystore.password.file,{(hadoop.security.group.mapping.ldap.ssl = true) => (hadoop.security.group.mapping.ldap.ssl.keystore.password.file != null)},control
178,hadoop.security.group.mapping.ldap.ssl.keystore,hadoop.security.group.mapping.ldap.ssl.keystore.password.file,{(hadoop.security.group.mapping.ldap.ssl.keystore != null) => (hadoop.security.group.mapping.ldap.ssl.keystore.password.file != null) || (hadoop.security.group.mapping.ldap.ssl.keystore.password != null)},overwrite
179,hadoop.security.credential.clear-text-fallback,hadoop.security.group.mapping.ldap.ssl.keystore.password,{(hadoop.security.credential.clear-text-fallback = true) => (hadoop.security.group.mapping.ldap.ssl.keystore.password != null)},control
180,hadoop.security.credential.clear-text-fallback,hadoop.security.group.mapping.ldap.bind.password,{(hadoop.security.credential.clear-text-fallback = true) => (hadoop.security.group.mapping.ldap.bind.password != null)},control
181,hadoop.security.group.mapping.ldap.directory.search.timeout,hadoop.security.group.mapping.ldap.search.group.hierarchy.levels,{(hadoop.security.group.mapping.ldap.search.group.hierarchy.levels > 0) => (hadoop.security.group.mapping.ldap.directory.search.timeout >= 10) && (hadoop.security.group.mapping.ldap.directory.search.timeout != 0)},value
182,fs.s3a.aws.credentials.provider,fs.s3a.secret.key,{(fs.s3a.aws.credentials.provider = 'org.apache.hadoop.fs.s3a.BasicAWSCredentialsProvider') => (fs.s3a.secret.key != null) && (fs.s3a.secret.key != '')},control
183,fs.s3a.fast.upload.buffer,fs.s3a.threads.max,"{(fs.s3a.fast.upload.buffer in {""array"", ""bytebuffer""}) => (fs.s3a.threads.max > 0) && (fs.s3a.threads.max != null)}",value
184,fs.s3a.fast.upload.buffer,fs.s3a.max.total.tasks,"{(fs.s3a.fast.upload.buffer in {""array"", ""bytebuffer""}) => (fs.s3a.max.total.tasks > 0) && (fs.s3a.max.total.tasks != null)}",value
185,fs.s3a.fast.upload.buffer,fs.s3a.multipart.size,"{(fs.s3a.fast.upload.buffer in {""array"", ""bytebuffer""}) => (fs.s3a.multipart.size > 0) && (fs.s3a.multipart.size != null)}",value
186,fs.s3a.buffer.dir,fs.s3a.fast.upload.buffer,{(fs.s3a.fast.upload.buffer = 'disk') => (fs.s3a.buffer.dir != null) && (fs.s3a.buffer.dir != '')},value
187,fs.s3a.s3guard.ddb.table,fs.s3a.s3guard.ddb.table.capacity.write,{(fs.s3a.s3guard.ddb.table != null) => (fs.s3a.s3guard.ddb.table.capacity.write in ANY)},overwrite
188,fs.s3a.s3guard.ddb.table.capacity.read,fs.s3a.s3guard.ddb.table.capacity.write,{(fs.s3a.s3guard.ddb.table.capacity.read > 0) => (fs.s3a.s3guard.ddb.table.capacity.write > 0) && (fs.s3a.s3guard.ddb.table.capacity.read != null) && (fs.s3a.s3guard.ddb.table.capacity.write != null)},value
189,net.topology.node.switch.mapping.impl,net.topology.script.file.name,{(net.topology.node.switch.mapping.impl = 'DEFAULT') => (net.topology.script.file.name = 'DEFAULT_RACK') && (net.topology.script.file.name != null) && (net.topology.script.file.name in {ANY})},control
190,fs.defaultFS,hadoop.shell.missing.defaultFs.warning,{(fs.defaultFS = null) => (hadoop.shell.missing.defaultFs.warning = true)},default
191,fs.client.resolve.topology.enabled,net.topology.script.file.name,{(fs.client.resolve.topology.enabled = true) => (net.topology.script.file.name != null)},control
192,mapreduce.job.ubertask.enable,yarn.app.mapreduce.am.resource.mb,{(mapreduce.job.ubertask.enable = true) => (yarn.app.mapreduce.am.resource.mb > mapreduce.map.memory.mb) && (yarn.app.mapreduce.am.resource.mb > mapreduce.reduce.memory.mb)},value
193,mapreduce.job.ubertask.enable,yarn.app.mapreduce.am.resource.cpu-vcores,{(mapreduce.job.ubertask.enable = true) => (yarn.app.mapreduce.am.resource.cpu-vcores > mapreduce.map.cpu.vcores) && (yarn.app.mapreduce.am.resource.cpu-vcores > mapreduce.reduce.cpu.vcores)},value
194,mapreduce.task.profile,mapreduce.task.profile.params,{(mapreduce.task.profile = true) => (mapreduce.task.profile.params != null)},control
195,mapreduce.task.profile,mapreduce.task.profile.map.params,{(mapreduce.task.profile = true) => (mapreduce.task.profile.map.params != null)},control
196,mapreduce.task.profile,mapreduce.task.profile.reduce.params,{(mapreduce.task.profile = true) => (mapreduce.task.profile.reduce.params != null)},control
197,mapreduce.cluster.acls.enabled,mapreduce.job.acl-view-job,{(mapreduce.cluster.acls.enabled = true) => (mapreduce.job.acl-view-job != null)},control
198,mapreduce.job.token.tracking.ids,mapreduce.job.token.tracking.ids.enabled,{(mapreduce.job.token.tracking.ids.enabled = true) => (mapreduce.job.token.tracking.ids != null)},control
199,mapreduce.jobhistory.intermediate-done-dir,mapreduce.jobhistory.intermediate-user-done-dir.permissions,{(mapreduce.jobhistory.intermediate-done-dir != null) => (mapreduce.jobhistory.intermediate-user-done-dir.permissions in {7})},value
200,mapreduce.outputcommitter.factory.class,mapreduce.outputcommitter.factory.scheme.s3a,{(mapreduce.outputcommitter.factory.class != null) => (mapreduce.outputcommitter.factory.scheme.s3a = ANY)},overwrite
201,yarn.resourcemanager.recovery.enabled,yarn.resourcemanager.store.class,{(yarn.resourcemanager.recovery.enabled = true) => (yarn.resourcemanager.store.class != null)},control
202,yarn.resourcemanager.store.class,yarn.resourcemanager.zk-state-store.root-node.acl,{(yarn.resourcemanager.store.class = 'org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore') => (yarn.resourcemanager.zk-state-store.root-node.acl != null)},control
203,yarn.resourcemanager.leveldb-state-store.path,yarn.resourcemanager.store.class,{(yarn.resourcemanager.store.class = 'org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore') => (yarn.resourcemanager.leveldb-state-store.path != null)},control
204,yarn.resourcemanager.ha.enabled,yarn.resourcemanager.ha.rm-ids,{(yarn.resourcemanager.ha.enabled = true) => (yarn.resourcemanager.ha.rm-ids != null) && (yarn.resourcemanager.ha.rm-ids != {})},control
205,yarn.log-aggregation-enable,yarn.nodemanager.remote-app-log-dir,{(yarn.log-aggregation-enable = true) => (yarn.nodemanager.remote-app-log-dir != null)},control
206,yarn.log-aggregation-enable,yarn.nodemanager.remote-app-log-dir-suffix,{(yarn.log-aggregation-enable = true) => (yarn.nodemanager.remote-app-log-dir-suffix != null)},control
207,yarn.nodemanager.disk-health-checker.min-healthy-disks,yarn.nodemanager.log-dirs,{(yarn.nodemanager.disk-health-checker.min-healthy-disks > 0) => (yarn.nodemanager.log-dirs != null)},value
208,yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage,yarn.nodemanager.local-dirs,{(yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage >= 0.0) && (yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage <= 100.0) => (yarn.nodemanager.local-dirs != null)},value
209,yarn.nodemanager.disk-health-checker.disk-utilization-watermark-low-per-disk-percentage,yarn.nodemanager.local-dirs,{(yarn.nodemanager.disk-health-checker.disk-utilization-watermark-low-per-disk-percentage > 0.0) && (yarn.nodemanager.disk-health-checker.disk-utilization-watermark-low-per-disk-percentage <= 100.0) => (yarn.nodemanager.local-dirs != null)},value
210,yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb,yarn.nodemanager.local-dirs,{(yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb > 0) => (yarn.nodemanager.local-dirs != null)},value
211,yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb,yarn.nodemanager.log-dirs,{(yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb > 0) => (yarn.nodemanager.log-dirs != null)},value
212,yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled,yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb,{(yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled = true) => (yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb > 0) && (yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb!= null)},value
213,yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb,yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb,{(yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb < yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb) => (yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb = yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb)},value
214,yarn.nodemanager.node-attributes.provider,yarn.nodemanager.node-attributes.provider.configured-node-attributes,{(yarn.nodemanager.node-attributes.provider = 'config') => (yarn.nodemanager.node-attributes.provider.configured-node-attributes != null)},control
215,yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds,yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min,{(yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds > 0) => (yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds >= yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min)},value
216,yarn.nodemanager.elastic-memory-control.enabled,yarn.nodemanager.resource.detect-hardware-capabilities,{(yarn.nodemanager.elastic-memory-control.enabled = true) => (yarn.nodemanager.resource.detect-hardware-capabilities = true)},control
217,yarn.nodemanager.elastic-memory-control.enabled,yarn.nodemanager.elastic-memory-control.oom-handler,{(yarn.nodemanager.elastic-memory-control.enabled = true) => (yarn.nodemanager.elastic-memory-control.oom-handler != null)},control
218,dfs.client.block.write.replace-datanode-on-failure.best-effort,dfs.client.block.write.replace-datanode-on-failure.enable,"{(dfs.client.block.write.replace-datanode-on-failure.enable = true) => (dfs.client.block.write.replace-datanode-on-failure.best-effort in {true, false})}",value
219,dfs.namenode.resource.check.interval,dfs.namenode.resource.checked.volumes,{(dfs.namenode.resource.check.interval > 0) => (dfs.namenode.resource.checked.volumes != null)},value
220,dfs.namenode.decommission.blocks.per.interval,dfs.namenode.decommission.interval,{(dfs.namenode.decommission.interval > 0) => (dfs.namenode.decommission.blocks.per.interval >= 0)},value
221,dfs.encrypt.data.transfer,dfs.encrypt.data.transfer.cipher.suites,{(dfs.encrypt.data.transfer.cipher.suites != null) => (dfs.encrypt.data.transfer = true)},control
222,dfs.namenode.enable.retrycache,dfs.namenode.retrycache.expirytime.millis,{(dfs.namenode.enable.retrycache = true) => (dfs.namenode.retrycache.expirytime.millis > 0) && (dfs.namenode.retrycache.expirytime.millis!= null)},value
223,dfs.block.access.key.update.interval,dfs.block.access.token.lifetime,{ dfs.block.access.key.update.interval = ANY => dfs.block.access.token.lifetime != null },control
224,dfs.block.invalidate.limit,dfs.heartbeat.interval,{ dfs.heartbeat.interval = ANY=> dfs.block.invalidate.limit >= 20 * dfs.heartbeat.interval },value
225,dfs.blockreport.initialDelay,dfs.blockreport.intervalMsec,{ dfs.blockreport.initialDelay * 1000 >= dfs.blockreport.intervalMsec => dfs.blockreport.initialDelay = 0 },value
226,dfs.client.domain.socket.data.traffic,dfs.client.use.legacy.blockreader.local,{ dfs.client.domain.socket.data.traffic = false => dfs.client.use.legacy.blockreader.local = true },control
227,dfs.client.read.shortcircuit.buffer.size,file.bytes-per-checksum,{ file.bytes-per-checksum = 0 => dfs.client.read.shortcircuit.buffer.size = 0 },value
228,dfs.client.read.shortcircuit.buffer.size,hbase.hstore.bytes.per.checksum,{hbase.hstore.bytes.per.checksum = ANY => dfs.client.read.shortcircuit.buffer.size>hbase.hstore.bytes.per.checksum},value
229,dfs.client.use.legacy.blockreader.local,dfs.domain.socket.path,{ dfs.client.use.legacy.blockreader.local = false => dfs.domain.socket.path != null },control
230,dfs.data.transfer.protection,hadoop.rpc.protection,{ dfs.data.transfer.protection != null => hadoop.rpc.protection = dfs.data.transfer.protection },overwrite
231,dfs.datanode.balance.max.concurrent.moves,dfs.mover.moverThreads,{ dfs.mover.moverThreads = ANY => (dfs.datanode.balance.max.concurrent.moves = ANY => threadsPerTarget <= dfs.datanode.balance.max.concurrent.moves) },value
232,dfs.datanode.cache.revocation.polling.ms,dfs.datanode.cache.revocation.timeout.ms,"{ dfs.datanode.cache.revocation.timeout.ms = ""ANY"" => dfs.datanode.cache.revocation.polling.ms <= dfs.datanode.cache.revocation.timeout.ms / 2 }",value
233,dfs.ha.automatic-failover.enabled,dfs.ha.zkfc.port,{ dfs.ha.automatic-failover.enabled = true => dfs.ha.zkfc.port != null },control
234,dfs.heartbeat.interval,dfs.namenode.heartbeat.recheck-interval,{ dfs.namenode.heartbeat.recheck-interval = ANY => dfs.heartbeat.interval > (dfs.namenode.heartbeat.recheck-interval / 2000 - 10) },behavior
235,dfs.heartbeat.interval,dfs.namenode.stale.datanode.interval,{ dfs.namenode.stale.datanode.interval < (3 * dfs.heartbeat.interval) => dfs.namenode.stale.datanode.interval = (3 * dfs.heartbeat.interval) },value
236,dfs.image.compress,dfs.image.compression.codec,{ dfs.image.compress = false => dfs.image.compression.codec = null },control
237,dfs.journalnode.https-address,dfs.journalnode.https-bind-host,{ dfs.journalnode.https-address != null => dfs.journalnode.https-bind-host = ANY },overwrite
238,dfs.namenode.avoid.write.stale.datanode,dfs.namenode.heartbeat.recheck-interval,{ dfs.namenode.avoid.write.stale.datanode = true => dfs.namenode.heartbeat.recheck-interval > dfs.namenode.stale.datanode.interval },value
239,dfs.namenode.avoid.write.stale.datanode,dfs.namenode.stale.datanode.interval,{ dfs.namenode.avoid.write.stale.datanode = true => dfs.namenode.stale.datanode.interval < dfs.namenode.heartbeat.recheck.interval },value
240,dfs.namenode.delegation.key.update-interval,dfs.namenode.delegation.token.max-lifetime,"{ dfs.namenode.delegation.key.update-interval = ""ANY"" => dfs.namenode.delegation.token.max-lifetime = ""ANY"" => (dfs.namenode.delegation.key.update-interval + dfs.namenode.delegation.token.max-lifetime) > 0 }",value
241,dfs.namenode.https-address,dfs.namenode.https-bind-host,{ dfs.namenode.https-address != null => dfs.namenode.https-bind-host = ANY },overwrite
242,dfs.namenode.maintenance.replication.min,dfs.replication.max,{ dfs.replication.max = ANY => dfs.namenode.maintenance.replication.min < dfs.replication.max },value
243,dfs.namenode.replication.min,dfs.replication.max,{ dfs.namenode.replication.min = ANY => dfs.namenode.replication.min <= dfs.replication.max },value
244,dfs.namenode.rpc-address,dfs.namenode.servicerpc-address,{ dfs.namenode.servicerpc-address = null => dfs.namenode.rpc-address != null },behavior
245,dfs.namenode.stale.datanode.interval,dfs.namenode.stale.datanode.minimum.interval,{ dfs.namenode.stale.datanode.interval < dfs.namenode.stale.datanode.minimum.interval => dfs.namenode.stale.datanode.interval = dfs.namenode.stale.datanode.minimum.interval },value
246,dfs.web.authentication.filter,dfs.webhdfs.enabled,{ dfs.webhdfs.enabled = true => dfs.web.authentication.filter != null },control
247,dfs.webhdfs.acl.provider.permission.pattern,dfs.webhdfs.enabled,{ dfs.webhdfs.enabled = true => dfs.webhdfs.acl.provider.permission.pattern != null },control
248,dfs.webhdfs.enabled,dfs.webhdfs.user.provider.user.pattern,{ dfs.webhdfs.enabled = true => dfs.webhdfs.user.provider.user.pattern != null },control
249,hadoop.http.filter.initializers,yarn.timeline-service.http-cross-origin.enabled,{ hadoop.http.filter.initializers not in {CrossOriginFilterInitializer.class.getName()} => yarn.timeline-service.http-cross-origin.enabled = true },behavior
250,hadoop.registry.kerberos.realm,hadoop.registry.secure,{ hadoop.registry.secure = true => hadoop.registry.kerberos.realm != null },control
251,ipc.client.ping,ipc.client.rpc-timeout.ms,{ ipc.client.ping = false => ipc.client.rpc-timeout.ms > 0 },value
252,mapreduce.app-submission.cross-platform,mapreduce.application.classpath,{ mapreduce.app-submission.cross-platform = true => mapreduce.application.classpath = ANY },overwrite
253,mapreduce.app-submission.cross-platform,yarn.application.classpath,{ mapreduce.app-submission.cross-platform = true => yarn.application.classpath = ANY },overwrite
254,mapreduce.framework.name,yarn.sharedcache.enabled,"{mapreduce.framework.name = ""yarn"" => yarn.sharedcache.enabled = true}",control
255,mapreduce.job.reduce.slowstart.completedmaps,mapreduce.job.ubertask.enable,{ mapreduce.job.ubertask.enable = true => mapreduce.job.reduce.slowstart.completedmaps = 1.0f },value
256,mapreduce.job.reduces,mapreduce.job.ubertask.enable,{ mapreduce.job.ubertask.enable = true => mapreduce.job.reduces = ANY },overwrite
257,mapreduce.job.sharedcache.mode,yarn.sharedcache.enabled,"{ yarn.sharedcache.enabled = true => mapreduce.job.sharedcache.mode = ""files"" }",value
258,mapreduce.jobhistory.cleaner.enable,mapreduce.jobhistory.cleaner.interval-ms,{ mapreduce.jobhistory.cleaner.enable = true => mapreduce.jobhistory.cleaner.interval-ms != null },control
259,mapreduce.jobhistory.http.policy,mapreduce.jobhistory.webapp.https.address,"{ mapreduce.jobhistory.http.policy = ""HTTPS_ONLY"" => mapreduce.jobhistory.webapp.https.address != null }",control
260,mapreduce.map.memory.mb,mapreduce.reduce.memory.mb,"{ mapreduce.map.memory.mb != null && mapreduce.reduce.memory.mb != null => requiredMB = MAX(mapreduce.map.memory.mb, mapreduce.reduce.memory.mb) }",behavior
261,mapreduce.map.skip.maxrecords,mapreduce.map.skip.proc-count.auto-incr,{ mapreduce.map.skip.maxrecords > 0 => mapreduce.map.skip.proc-count.auto-incr = true },value
262,mapreduce.reduce.shuffle.fetch.retry.enabled,mapreduce.reduce.shuffle.fetch.retry.timeout-ms,{ mapreduce.reduce.shuffle.fetch.retry.enabled = false => mapreduce.reduce.shuffle.fetch.retry.timeout-ms = null },control
263,mapreduce.reduce.shuffle.memory.limit.percent,mapreduce.reduce.shuffle.merge.percent,{ mapreduce.reduce.shuffle.memory.limit.percent * mapreduce.reduce.shuffle.merge.percent = ANY => maxSingleShuffleLimit < mergeThreshold },value
264,yarn.am.liveness-monitor.expiry-interval-ms,yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs,{ yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs * 1000 <= yarn.am.liveness-monitor.expiry-interval-ms * 3 => yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs > yarn.am.liveness-monitor.expiry-interval-ms * 2 },behavior
265,yarn.client.failover-max-attempts,yarn.client.failover-sleep-base-ms,{ yarn.client.failover-sleep-base-ms = ANY => yarn.client.failover-max-attempts > 0 },value
266,yarn.client.failover-sleep-base-ms,yarn.resourcemanager.connect.max-wait.ms,{ yarn.resourcemanager.connect.max-wait.ms > 0 => yarn.client.failover-sleep-base-ms != 0 },value
267,yarn.http.policy,yarn.nodemanager.webapp.address,"{ yarn.http.policy = ""HTTPS_ONLY"" => yarn.nodemanager.webapp.address in { YarnConfiguration.DEFAULT_NM_WEBAPP_HTTPS_ADDRESS } }",value
268,yarn.http.policy,yarn.nodemanager.webapp.https.address,"{ yarn.http.policy = ""HTTPS_ONLY"" => yarn.nodemanager.webapp.https.address != null }",control
269,yarn.http.policy,yarn.resourcemanager.webapp.address,"{ yarn.http.policy = ""HTTPS_ONLY"" => yarn.resourcemanager.webapp.address in { YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS } | yarn.http.policy = ""HTTP_AND_HTTPS"" => yarn.resourcemanager.webapp.address in { YarnConfiguration.RM_WEBAPP_ADDRESS, YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS } | yarn.http.policy = ""HTTP_ONLY"" => yarn.resourcemanager.webapp.address in { YarnConfiguration.RM_WEBAPP_ADDRESS, YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS } }",value
270,yarn.http.policy,yarn.resourcemanager.webapp.https.address,"{ yarn.http.policy = ""HTTPS_ONLY"" => yarn.resourcemanager.webapp.https.address != null }",control
271,yarn.http.policy,yarn.router.webapp.address,"{ yarn.http.policy = ""HTTPS_ONLY"" => yarn.router.webapp.address != null }",control
272,yarn.http.policy,yarn.timeline-service.webapp.address,"{ yarn.http.policy = ""HTTPS_ONLY"" => yarn.timeline-service.webapp.address in {YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS} }",value
273,yarn.http.policy,yarn.timeline-service.webapp.https.address,"{ yarn.http.policy = ""HTTPS_ONLY"" => yarn.timeline-service.webapp.https.address != null }",control
274,yarn.log-aggregation-enable,yarn.log-aggregation.retain-seconds,{ yarn.log-aggregation-enable = false => yarn.log-aggregation.retain-seconds = null },control
275,yarn.log-aggregation-enable,yarn.log.server.url,{ yarn.log-aggregation-enable = true => yarn.log.server.url != null },control
276,yarn.log-aggregation.file-formats,yarn.nodemanager.remote-app-log-dir,{ yarn.log-aggregation.file-formats != null => yarn.nodemanager.remote-app-log-dir != null },control
277,yarn.log-aggregation.retain-check-interval-seconds,yarn.log-aggregation.retain-seconds,{ yarn.log-aggregation.retain-seconds = ANY => yarn.log-aggregation.retain-check-interval-seconds != null },overwrite
278,yarn.nm.liveness-monitor.expiry-interval-ms,yarn.resourcemanager.nodemanagers.heartbeat-interval-ms,"{ yarn.resourcemanager.nodemanagers.heartbeat-interval-ms = ""ANY"" => yarn.nm.liveness-monitor.expiry-interval-ms >= yarn.resourcemanager.nodemanagers.heartbeat-interval-ms }",value
279,yarn.nodemanager.address,yarn.nodemanager.bind-host,{ yarn.nodemanager.bind-host != null => yarn.nodemanager.address != null },control
280,yarn.nodemanager.amrmproxy.enabled,yarn.nodemanager.distributed-scheduling.enabled,{ yarn.nodemanager.amrmproxy.enabled = true => yarn.nodemanager.distributed-scheduling.enabled = ANY },overwrite
281,yarn.nodemanager.container-monitor.enabled,yarn.nodemanager.container-monitor.interval-ms,{ yarn.nodemanager.container-monitor.enabled = true => yarn.nodemanager.container-monitor.interval-ms > 0 },value
282,yarn.nodemanager.disk-health-checker.enable,yarn.nodemanager.disk-health-checker.min-healthy-disks,{ yarn.nodemanager.disk-health-checker.enable = false => yarn.nodemanager.disk-health-checker.min-healthy-disks = ANY },overwrite
283,yarn.nodemanager.distributed-scheduling.enabled,yarn.resourcemanager.opportunistic-container-allocation.enabled,{ yarn.nodemanager.distributed-scheduling.enabled = true => yarn.resourcemanager.opportunistic-container-allocation.enabled = true },control
284,yarn.nodemanager.distributed-scheduling.enabled,yarn.resourcemanager.scheduler.client.thread-count,{ yarn.nodemanager.distributed-scheduling.enabled = true => yarn.resourcemanager.scheduler.client.thread-count != null },control
285,yarn.nodemanager.linux-container-executor.cgroups.hierarchy,yarn.nodemanager.linux-container-executor.cgroups.mount,{ yarn.nodemanager.linux-container-executor.cgroups.mount = false => yarn.nodemanager.linux-container-executor.cgroups.hierarchy != null },control
286,yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage,yarn.nodemanager.resource.cpu-vcores,{ yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage = true => yarn.nodemanager.resource.cpu-vcores != null },control
287,yarn.nodemanager.process-kill-wait.ms,yarn.nodemanager.sleep-delay-before-sigkill.ms,"{ yarn.nodemanager.sleep-delay-before-sigkill.ms = ""ANY"" => yarn.nodemanager.process-kill-wait.ms = ""ANY"" => waitForContainersOnShutdownMillis > [0..default.MAX_VALUE] }",behavior
288,yarn.nodemanager.recovery.enabled,yarn.nodemanager.recovery.supervised,{ yarn.nodemanager.recovery.enabled = true => yarn.nodemanager.recovery.supervised = true },control
289,yarn.nodemanager.resource.cpu-vcores,yarn.nodemanager.resource.percentage-physical-cpu-limit,{ NM_WINDOWS_CONTAINER_CPU_LIMIT_ENABLED = true => (yarn.nodemanager.resource.cpu-vcores != null && yarn.nodemanager.resource.percentage-physical-cpu-limit != null) },behavior
290,yarn.nodemanager.resource.memory-mb,yarn.nodemanager.vmem-pmem-ratio,{ yarn.nodemanager.vmem-pmem-ratio > 0.99 => yarn.nodemanager.resource.memory-mb != null },value
291,yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed,yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold,{ yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed = true => yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold = ANY },control
292,yarn.resourcemanager.address,yarn.resourcemanager.principal,{ yarn.resourcemanager.principal != null => yarn.resourcemanager.address != null },control
293,yarn.resourcemanager.bind-host,yarn.resourcemanager.resource-tracker.address,"{ yarn.resourcemanager.bind-host = """" || yarn.resourcemanager.bind-host = null => yarn.resourcemanager.resource-tracker.address != null }",control
294,yarn.resourcemanager.connect.max-wait.ms,yarn.resourcemanager.connect.retry-interval.ms,{ yarn.resourcemanager.connect.max-wait.ms < yarn.resourcemanager.connect.retry-interval.ms => yarn.resourcemanager.connect.max-wait.ms = 0 },value
295,yarn.resourcemanager.ha.automatic-failover.embedded,yarn.resourcemanager.ha.automatic-failover.enabled,{ yarn.resourcemanager.ha.automatic-failover.enabled = true => yarn.resourcemanager.ha.automatic-failover.embedded = ANY },overwrite
296,yarn.resourcemanager.ha.enabled,yarn.resourcemanager.zk-state-store.root-node.acl,{ yarn.resourcemanager.ha.enabled = true => yarn.resourcemanager.zk-state-store.root-node.acl != null },behavior
297,yarn.resourcemanager.ha.enabled,yarn.web-proxy.address,{ yarn.resourcemanager.ha.enabled = true => yarn.web-proxy.address != null },control
298,yarn.resourcemanager.ha.id,yarn.resourcemanager.ha.rm-ids,{ yarn.resourcemanager.ha.rm-ids != null => yarn.resourcemanager.ha.id = yarn.resourcemanager.ha.rm-ids[0] },default
299,yarn.resourcemanager.webapp.address,yarn.resourcemanager.webapp.https.address,{ yarn.resourcemanager.webapp.https.address != null => yarn.resourcemanager.webapp.address = ANY },overwrite
300,yarn.scheduler.maximum-allocation-mb,yarn.scheduler.minimum-allocation-mb,"{ yarn.scheduler.minimum-allocation-mb = ""ANY"" => yarn.scheduler.minimum-allocation-mb <= yarn.scheduler.maximum-allocation-mb }",value
301,yarn.scheduler.maximum-allocation-vcores,yarn.scheduler.minimum-allocation-vcores,{ yarn.scheduler.minimum-allocation-vcores > 0 => yarn.scheduler.minimum-allocation-vcores <= yarn.scheduler.maximum-allocation-vcores },value
302,yarn.sharedcache.enabled,yarn.sharedcache.nm.uploader.thread-count,{ yarn.sharedcache.enabled = true => yarn.sharedcache.nm.uploader.thread-count != null },control
303,yarn.system-metrics-publisher.enabled,yarn.timeline-service.enabled,{ yarn.timeline-service.enabled = true => yarn.system-metrics-publisher.enabled = true },control
304,yarn.webapp.ui2.enable,yarn.webapp.ui2.war-file-path,{ yarn.webapp.ui2.enable = true => yarn.webapp.ui2.war-file-path != null },control
