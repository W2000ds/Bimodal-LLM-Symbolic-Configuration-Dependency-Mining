id,Parameter1,Parameter2,bnf,type
860,dfs.client.block.write.locateFollowingBlock.retries,dfs.client.socket-timeout,dfs.client.block.write.locateFollowingBlock.retries > 3 => dfs.client.socket-timeout > 60000,behavior
1416,dfs.ha.standby.checkpoints,dfs.ha.zkfc.port,dfs.ha.zkfc.port = ANY => dfs.ha.standby.checkpoints = ANY,behavior
962,dfs.journalnode.kerberos.internal.spnego.principal,dfs.journalnode.kerberos.internal.spnego.keytab.file,dfs.journalnode.kerberos.internal.spnego.principal != null => dfs.journalnode.kerberos.internal.spnego.keytab.file != null,behavior
896,dfs.client.socket-timeout,dfs.datanode.socket.write.timeout,dfs.client.socket-timeout > 0 => dfs.datanode.socket.write.timeout = dfs.client.socket-timeout + 1000,behavior
828,dfs.namenode.hosts.provider.classname,dfs.ha.namenodes.[nameservice ID],dfs.namenode.hosts.provider.classname != default => dfs.ha.namenodes.[nameservice ID] != null,behavior
1081,dfs.datanode.disk.check.timeout,dfs.datanode.disk.check.interval,dfs.datanode.disk.check.timeout > 0 => dfs.datanode.disk.check.interval > 0,behavior
374,dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold,dfs.datanode.available-space-volume-choosing-policy.balanced-space-preference-fraction,dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold = 10737418240 => dfs.datanode.available-space-volume-choosing-policy.balanced-space-preference-fraction = 0.75f,behavior
847,dfs.https.server.keystore.resource,dfs.datanode.https.address,dfs.datanode.https.address != null => dfs.https.server.keystore.resource != null,behavior
1496,dfs.secondary.namenode.keytab.file,dfs.web.authentication.kerberos.keytab,dfs.web.authentication.kerberos.principal != null => dfs.secondary.namenode.keytab.file != null,behavior
662,dfs.datanode.hdfs-blocks-metadata.enabled,dfs.datanode.max.locked.memory,dfs.datanode.hdfs-blocks-metadata.enabled = true => dfs.datanode.max.locked.memory > 0,behavior
1095,dfs.namenode.kerberos.principal,dfs.namenode.keytab.file,dfs.namenode.kerberos.principal != null => dfs.namenode.keytab.file != null,behavior
1100,dfs.namenode.keytab.file,dfs.datanode.keytab.file,dfs.datanode.kerberos.principal != null => dfs.namenode.keytab.file != null,behavior
404,dfs.http.client.retry.policy.enabled,dfs.client.retry.policy.enabled,dfs.http.client.retry.policy.enabled = true => dfs.client.retry.policy.enabled = true,behavior
600,dfs.ha.automatic-failover.enabled,dfs.ha.namenodes.[nameserviceID],dfs.ha.automatic-failover.enabled = true => dfs.ha.namenodes.[nameserviceID] != null,behavior
848,dfs.balancer.max-no-move-interval,dfs.balancer.movedWinWidth,dfs.balancer.max-no-move-interval > 0 => dfs.balancer.movedWinWidth > 0,behavior
325,dfs.namenode.delegation.key.update-interval,dfs.namenode.num.extra.edits.retained,dfs.namenode.delegation.key.update-interval = 86400000 => dfs.namenode.num.extra.edits.retained = 10000,behavior
689,dfs.namenode.edits.noeditlogchannelflush,dfs.namenode.edits.dir,dfs.namenode.edits.noeditlogchannelflush = true => dfs.namenode.edits.dir != null,behavior
587,dfs.ha.namenodes.EXAMPLENAMESERVICE,dfs.ha.automatic-failover.enabled,"dfs.ha.namenodes.EXAMPLENAMESERVICE != null => dfs.ha.automatic-failover.enabled in {{ true, false }}",behavior
696,dfs.client.cache.readahead,dfs.client.read.shortcircuit,dfs.client.cache.readahead > 0 => dfs.client.read.shortcircuit = true,behavior
648,dfs.encrypt.data.transfer.algorithm,dfs.encrypt.data.transfer.cipher.suites,dfs.encrypt.data.transfer.algorithm != null => dfs.encrypt.data.transfer.cipher.suites != null,behavior
414,dfs.datanode.data.dir.perm,dfs.datanode.data.dir,dfs.datanode.data.dir.perm = <String> => dfs.datanode.data.dir = <String>,behavior
893,dfs.client.retry.times.get-last-block-length,dfs.client.socket-timeout,dfs.client.retry.times.get-last-block-length > 1 => dfs.client.socket-timeout > dfs.client.retry.times.get-last-block-length * 1000,behavior
389,dfs.namenode.fs-limits.max-directory-items,dfs.namenode.handler.count,dfs.namenode.fs-limits.max-directory-items > {{ANY}} => dfs.namenode.handler.count > {{ANY}},behavior
732,dfs.client.context,dfs.client.socket-timeout,dfs.client.context = ANY => dfs.client.socket-timeout = ANY,behavior
436,dfs.client.block.write.replace-datanode-on-failure.policy,dfs.client.block.write.replace-datanode-on-failure.best-effort,dfs.client.block.write.replace-datanode-on-failure.policy = 'DEFAULT' => dfs.client.block.write.replace-datanode-on-failure.best-effort = true,behavior
559,dfs.datanode.drop.cache.behind.writes,dfs.datanode.sync.behind.writes,dfs.datanode.drop.cache.behind.writes = true => dfs.datanode.sync.behind.writes = true,behavior
783,dfs.storage.policy.enabled,dfs.block.move.trigger,dfs.storage.policy.enabled = true => dfs.block.move.trigger > 0,behavior
772,dfs.namenode.fslock.fair,ipc.server.read.threadpool.size,dfs.namenode.fslock.fair = false => ipc.server.read.threadpool.size < 10,behavior
590,dfs.ha.namenode.id,dfs.namenode.http-address.[nameserviceID].[namenodeID],dfs.ha.namenode.id = <namenodeID> => dfs.namenode.http-address.<nameserviceID>.<namenodeID> = <http_address>,behavior
943,dfs.datanode.socket.write.timeout,dfs.datanode.ipc.read.timeout,dfs.datanode.socket.write.timeout > 0 => dfs.datanode.ipc.read.timeout > 0,behavior
639,dfs.namenode.stale.datanode.interval,dfs.namenode.heartbeat.recheck-interval,dfs.namenode.stale.datanode.interval > 0 => dfs.namenode.heartbeat.recheck-interval > 0,behavior
602,dfs.client.use.datanode.hostname,hadoop.security.token.service.use_ip,dfs.client.use.datanode.hostname = true => hadoop.security.token.service.use_ip = false,behavior
701,dfs.namenode.enable.retrycache,dfs.client.retry.policy.enabled,dfs.namenode.enable.retrycache = true => dfs.client.retry.policy.enabled = true,behavior
838,dfs.balancer.moverThreads,dfs.datanode.balance.bandwidthPerSec,dfs.balancer.moverThreads > 1 => dfs.datanode.balance.bandwidthPerSec > 10485760,behavior
432,dfs.client.block.write.replace-datanode-on-failure.enable,dfs.client.block.write.replace-datanode-on-failure.policy,dfs.client.block.write.replace-datanode-on-failure.enable = true => dfs.client.block.write.replace-datanode-on-failure.policy != null,behavior
353,dfs.client.https.need-auth,dfs.https.need.auth,dfs.client.https.need-auth = true => dfs.https.need.auth = true,behavior
440,dfs.blockreport.intervalMsec,dfs.namenode.replication.interval,dfs.blockreport.intervalMsec > 60000 => dfs.namenode.replication.interval > 300,behavior
327,dfs.namenode.delegation.key.update-interval,dfs.namenode.delegation.token.max-lifetime,dfs.namenode.delegation.key.update-interval < dfs.namenode.delegation.token.max-lifetime => dfs.namenode.delegation.token.max-lifetime > dfs.namenode.delegation.key.update-interval,behavior
1086,dfs.qjm.operations.timeout,dfs.ha.tail-edits.period,dfs.qjm.operations.timeout > 30000 => dfs.ha.tail-edits.period < 1000,behavior
755,dfs.client.domain.socket.data.traffic,dfs.client.read.shortcircuit,dfs.client.domain.socket.data.traffic = true => dfs.client.read.shortcircuit = true,behavior
880,dfs.client.read.shortcircuit.buffer.size,dfs.client.read.shortcircuit.streams.cache.size,dfs.client.read.shortcircuit.buffer.size > default => dfs.client.read.shortcircuit.streams.cache.size > default,behavior
971,dfs.mover.movedWinWidth,dfs.datanode.max.transfer.threads,dfs.mover.movedWinWidth > 1000 => dfs.datanode.max.transfer.threads > 4096,behavior
445,dfs.namenode.max.full.block.report.leases,dfs.namenode.full.block.report.lease.length.ms,dfs.namenode.max.full.block.report.leases > 0 => dfs.namenode.full.block.report.lease.length.ms > 60000,behavior
1013,dfs.qjournal.get-journal-state.timeout.ms,ipc.client.connect.timeout,dfs.qjournal.get-journal-state.timeout.ms > 60000 => ipc.client.connect.timeout < dfs.qjournal.get-journal-state.timeout.ms,behavior
581,dfs.internal.nameservices,dfs.namenode.rpc-address,dfs.internal.nameservices != null => dfs.namenode.rpc-address != null,behavior
937,dfs.datanode.oob.timeout-ms,dfs.namenode.heartbeat.recheck-interval,dfs.datanode.oob.timeout-ms < dfs.namenode.heartbeat.recheck-interval => dfs.datanode.oob.timeout-ms = dfs.namenode.heartbeat.recheck-interval / 2,behavior
775,dfs.namenode.rpc-address,dfs.namenode.rpc-bind-host,dfs.namenode.rpc-bind-host != null => dfs.namenode.rpc-address = dfs.namenode.rpc-bind-host:<port>,control
644,dfs.webhdfs.enabled,dfs.https.enable,dfs.webhdfs.enabled = true AND dfs.http.policy = HTTPS_ONLY => dfs.https.enable = true,control
893,dfs.permissions.enabled,dfs.cluster.administrators,dfs.permissions.enabled = true => dfs.cluster.administrators != null,control
1111,dfs.journalnode.kerberos.principal,dfs.journalnode.keytab.file,dfs.journalnode.kerberos.principal != null => dfs.journalnode.keytab.file != null,control
870,dfs.client.max.block.acquire.failures,dfs.client.block.acquire.retries,dfs.client.max.block.acquire.failures > 0 => dfs.client.block.acquire.retries > 3,control
1508,dfs.webhdfs.oauth2.access.token.provider,dfs.webhdfs.oauth2.enabled,dfs.webhdfs.oauth2.enabled = true => dfs.webhdfs.oauth2.access.token.provider != null,control
684,dfs.journalnode.https-bind-host,dfs.http.policy,"dfs.journalnode.https-bind-host != null => dfs.http.policy in {{HTTPS_ONLY, HTTP_AND_HTTPS}}",control
342,dfs.datanode.handler.count,dfs.datanode.max.transfer.threads,dfs.datanode.handler.count > default => dfs.datanode.max.transfer.threads > default,control
882,dfs.namenode.edits.dir,dfs.namenode.edits.dir.required,dfs.namenode.edits.dir.required = true => dfs.namenode.edits.dir != null,control
830,dfs.http.policy,dfs.namenode.https-bind-host,"dfs.http.policy = ""HTTPS_ONLY"" => dfs.namenode.https-bind-host != ""null""",control
740,dfs.domain.socket.path,dfs.domain.socket.receive.buffer.size,dfs.domain.socket.path != null => dfs.domain.socket.receive.buffer.size > 0,control
1127,dfs.web.authentication.kerberos.principal,dfs.web.authentication.filter,"dfs.web.authentication.filter = ""org.apache.hadoop.security.authentication.server.KerberosAuthenticationFilter"" => dfs.web.authentication.kerberos.principal != null",control
1356,dfs.client.failover.random.order,dfs.ha.automatic-failover.enabled,dfs.ha.automatic-failover.enabled = true => dfs.client.failover.random.order = ANY,control
981,dfs.namenode.datanode.registration.ip-hostname-check,dfs.datanode.use.datanode.hostname,dfs.datanode.use.datanode.hostname = true => dfs.namenode.datanode.registration.ip-hostname-check = true,control
1073,dfs.ha.namenodes.EXAMPLENAMESERVICE,dfs.ha.namenode.id,dfs.ha.namenode.id = ANY => dfs.ha.namenodes.EXAMPLENAMESERVICE != null,control
980,dfs.namenode.datanode.registration.ip-hostname-check,dfs.client.use.datanode.hostname,dfs.client.use.datanode.hostname = true => dfs.namenode.datanode.registration.ip-hostname-check = true,control
1108,dfs.datanode.keytab.file,dfs.encrypt.data.transfer,dfs.encrypt.data.transfer = true => dfs.datanode.keytab.file != null,control
1244,dfs.client.domain.socket.data.traffic,dfs.client.use.legacy.blockreader.local,dfs.client.use.legacy.blockreader.local = false => dfs.client.domain.socket.data.traffic = true,control
505,dfs.namenode.checkpoint.dir,dfs.namenode.checkpoint.period,dfs.namenode.checkpoint.dir != null => dfs.namenode.checkpoint.period > 0,control
814,dfs.datanode.ipc.address,dfs.client.use.datanode.hostname,dfs.client.use.datanode.hostname = true => dfs.datanode.ipc.address in {hostname:port},control
746,dfs.client.read.shortcircuit.streams.cache.expiry.ms,dfs.domain.socket.path,dfs.client.read.shortcircuit.streams.cache.expiry.ms != null => dfs.domain.socket.path != null,control
1018,dfs.qjournal.prepare-recovery.timeout.ms,dfs.journalnode.edit-cache-size.bytes,dfs.qjournal.prepare-recovery.timeout.ms > default => dfs.journalnode.edit-cache-size.bytes > default,control
1396,dfs.client.write.max-packets-in-flight,dfs.client.block.write.retries,dfs.client.block.write.retries > 0 => dfs.client.write.max-packets-in-flight = ANY,control
1195,dfs.journalnode.http-bind-host,dfs.http.policy,dfs.http.policy = HTTPS_ONLY => dfs.journalnode.http-bind-host = null,control
386,dfs.namenode.xattrs.enabled,dfs.namenode.fs-limits.max-xattr-size,dfs.namenode.xattrs.enabled = true => dfs.namenode.fs-limits.max-xattr-size != null,control
1093,dfs.datanode.use.datanode.hostname,dfs.datanode.hostname,dfs.datanode.hostname != null => dfs.datanode.use.datanode.hostname = true,control
1088,dfs.ha.automatic-failover.enabled,dfs.namenode.rpc-address,dfs.ha.automatic-failover.enabled = true => dfs.namenode.rpc-address != null,control
713,dfs.namenode.path.based.cache.block.map.allocation.percent,dfs.namenode.path.based.cache.refresh.interval.ms,dfs.namenode.path.based.cache.block.map.allocation.percent > 0 => dfs.namenode.path.based.cache.refresh.interval.ms > 0,control
385,dfs.namenode.xattrs.enabled,dfs.namenode.fs-limits.max-xattrs-per-inode,dfs.namenode.xattrs.enabled = true => dfs.namenode.fs-limits.max-xattrs-per-inode != null,control
1133,dfs.namenode.avoid.read.stale.datanode,dfs.namenode.stale.datanode.interval,dfs.namenode.stale.datanode.interval > 0 => dfs.namenode.avoid.read.stale.datanode = true,control
933,dfs.client.block.write.replace-datanode-on-failure.enable,dfs.client.block.write.replace-datanode-on-failure.min-replication,dfs.client.block.write.replace-datanode-on-failure.min-replication = ANY => dfs.client.block.write.replace-datanode-on-failure.enable = true,default
898,dfs.block.access.token.enable,dfs.block.access.key.update.interval,dfs.block.access.token.enable = true => dfs.block.access.key.update.interval = ANY,default
1285,dfs.http.client.retry.policy.enabled,dfs.http.client.retry.policy.spec,dfs.http.client.retry.policy.enabled = true => dfs.http.client.retry.policy.spec != null,default
793,dfs.namenode.lifeline.rpc-address,dfs.namenode.lifeline.rpc-bind-host,dfs.namenode.lifeline.rpc-bind-host = ANY => dfs.namenode.lifeline.rpc-address = {dfs.namenode.lifeline.rpc-bind-host:port},default
277,dfs.datanode.du.reserved.pct,dfs.datanode.du.reserved.pct.ram_disk,dfs.datanode.du.reserved.pct.ram_disk = null => dfs.datanode.du.reserved.pct = dfs.datanode.du.reserved.pct.ram_disk,default
339,dfs.journalnode.kerberos.principal,dfs.journalnode.kerberos.internal.spnego.principal,dfs.journalnode.kerberos.principal = ANY => dfs.journalnode.kerberos.internal.spnego.principal = dfs.journalnode.kerberos.principal,default
262,dfs.namenode.rpc-address,dfs.namenode.servicerpc-bind-host,dfs.namenode.rpc-address = null => dfs.namenode.servicerpc-bind-host = dfs.namenode.rpc-address,default
1216,dfs.client.short.circuit.replica.stale.threshold.ms,dfs.client.read.short.circuit.replica.stale.threshold.ms,dfs.client.read.short.circuit.replica.stale.threshold.ms = null => dfs.client.short.circuit.replica.stale.threshold.ms = dfs.client.read.short.circuit.replica.stale.threshold.ms,default
293,dfs.namenode.replication.min,dfs.namenode.maintenance.replication.min,dfs.namenode.replication.min = ANY => dfs.namenode.maintenance.replication.min = dfs.namenode.replication.min,default
1040,dfs.client.failover.max.attempts,dfs.http.client.failover.sleep.max.millis,dfs.http.client.failover.sleep.max.millis = dfs.client.failover.sleep.max.millis,default
1287,dfs.http.client.retry.policy.enabled,dfs.http.client.retry.max.attempts,dfs.http.client.retry.policy.enabled = true => dfs.http.client.retry.max.attempts > 0,default
278,dfs.datanode.du.reserved.pct,dfs.datanode.du.reserved.pct.[ssd]/[disk]/[archive]/[ram_disk],dfs.datanode.du.reserved.pct.[ssd]/[disk]/[archive]/[ram_disk] = null => dfs.datanode.du.reserved.pct = dfs.datanode.du.reserved.pct.[ssd]/[disk]/[archive]/[ram_disk],default
991,dfs.namenode.checkpoint.dir,dfs.namenode.checkpoint.edits.dir,dfs.namenode.checkpoint.edits.dir = null => dfs.namenode.checkpoint.dir = ANY,default
845,dfs.https.server.keystore.resource,dfs.client.https.keystore.resource,dfs.client.https.keystore.resource = null => dfs.https.server.keystore.resource = ANY,default
288,dfs.block.access.key.update.interval,dfs.block.access.token.lifetime,dfs.block.access.key.update.interval = ANY => dfs.block.access.token.lifetime = dfs.block.access.key.update.interval,default
792,dfs.namenode.lifeline.rpc-address,dfs.namenode.rpc-bind-host,dfs.namenode.rpc-bind-host = ANY => dfs.namenode.lifeline.rpc-address = {dfs.namenode.rpc-bind-host:port},default
1301,dfs.http.client.retry.max.attempts,dfs.client.retry.max.attempts,dfs.client.retry.max.attempts = null => dfs.http.client.retry.max.attempts = default,default
1286,dfs.http.client.retry.policy.enabled,dfs.http.client.failover.max.attempts,dfs.http.client.retry.policy.enabled = true => dfs.http.client.failover.max.attempts > 0,default
320,dfs.namenode.checkpoint.dir,dfs.namenode.checkpoint.edits.dir,dfs.namenode.checkpoint.dir = ANY => dfs.namenode.checkpoint.edits.dir = dfs.namenode.checkpoint.dir,default
275,dfs.datanode.du.reserved.calculator,dfs.datanode.du.reserved.pct,dfs.datanode.du.reserved.calculator = org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.ReservedSpaceCalculator$ReservedSpaceCalculatorPercentage => dfs.datanode.du.reserved.pct = ANY,default
1288,dfs.http.client.retry.policy.enabled,dfs.http.client.failover.sleep.base.millis,dfs.http.client.retry.policy.enabled = true => dfs.http.client.failover.sleep.base.millis > 0,default
1167,dfs.encrypt.data.transfer,dfs.encrypt.data.transfer.cipher.suites,"dfs.encrypt.data.transfer = ""true"" => dfs.encrypt.data.transfer.cipher.suites != ""null""",default
258,dfs.namenode.rpc-address,dfs.namenode.servicerpc-address,dfs.namenode.servicerpc-address = null => dfs.namenode.servicerpc-address = dfs.namenode.rpc-address,default
313,dfs.datanode.plugins,dfs.client.cache.drop.behind.reads,dfs.datanode.plugins != null => dfs.client.cache.drop.behind.reads = ANY,overwrite
329,dfs.client.cache.drop.behind.reads,dfs.datanode.drop.cache.behind.reads,dfs.client.cache.drop.behind.reads != null => dfs.datanode.drop.cache.behind.reads = ANY,overwrite
372,dfs.journalnode.https-bind-host,dfs.journalnode.https-address,dfs.journalnode.https-bind-host != null => dfs.journalnode.https-address = ANY,overwrite
364,dfs.trustedchannel.resolver.class,dfs.encrypt.data.transfer.cipher.key.bitlength,dfs.trustedchannel.resolver.class != null => dfs.encrypt.data.transfer.cipher.key.bitlength = ANY,overwrite
369,dfs.journalnode.rpc-bind-host,dfs.journalnode.rpc-address,dfs.journalnode.rpc-bind-host != null => dfs.journalnode.rpc-address = ANY,overwrite
377,dfs.client.cache.readahead,dfs.datanode.readahead.bytes,dfs.client.cache.readahead != null => dfs.datanode.readahead.bytes = ANY,overwrite
260,dfs.namenode.rpc-bind-host,dfs.namenode.servicerpc-bind-host,dfs.namenode.rpc-bind-host != null => dfs.namenode.servicerpc-bind-host = ANY,overwrite
330,dfs.client.cache.drop.behind.writes,dfs.datanode.drop.cache.behind.writes,dfs.client.cache.drop.behind.writes != null => dfs.datanode.drop.cache.behind.writes = ANY,overwrite
306,dfs.namenode.lifeline.handler.ratio,dfs.namenode.lifeline.handler.count,dfs.namenode.lifeline.handler.ratio != null => dfs.namenode.lifeline.handler.count = ANY,overwrite
358,dfs.encrypt.data.transfer,dfs.data.transfer.protection,dfs.encrypt.data.transfer = true => dfs.data.transfer.protection = ANY,overwrite
267,dfs.namenode.http-address,dfs.namenode.http-bind-host,dfs.namenode.http-bind-host != null => dfs.namenode.http-address = ANY,overwrite
371,dfs.journalnode.https-address,dfs.journalnode.http-bind-host,dfs.journalnode.https-address != null => dfs.journalnode.http-bind-host = ANY,overwrite
263,dfs.namenode.servicerpc-address,dfs.namenode.servicerpc-bind-host,dfs.namenode.servicerpc-address != null => dfs.namenode.servicerpc-bind-host = ANY,overwrite
264,dfs.namenode.lifeline.rpc-address,dfs.namenode.lifeline.rpc-bind-host,dfs.namenode.lifeline.rpc-address != null => dfs.namenode.lifeline.rpc-bind-host = ANY,overwrite
905,dfs.replication,dfs.namenode.replication.min,dfs.replication > dfs.namenode.replication.min,value
411,dfs.balancer.getBlocks.min-block-size,dfs.balancer.getBlocks.size,dfs.balancer.getBlocks.min-block-size < dfs.balancer.getBlocks.size => dfs.balancer.getBlocks.size > dfs.balancer.getBlocks.min-block-size,value
945,dfs.blockreport.intervalMsec,dfs.heartbeat.interval,dfs.heartbeat.interval > 0 => dfs.blockreport.intervalMsec = dfs.heartbeat.interval * 3,value
1091,dfs.client.use.datanode.hostname,dfs.datanode.use.datanode.hostname,dfs.datanode.use.datanode.hostname = true => dfs.client.use.datanode.hostname = true,value
869,dfs.datanode.du.reserved.calculator,dfs.datanode.du.reserved,dfs.datanode.du.reserved.calculator = ANY => dfs.datanode.du.reserved = ANY,value
1143,dfs.namenode.stale.datanode.interval,dfs.namenode.stale.datanode.minimum.interval,dfs.namenode.stale.datanode.minimum.interval > 0 => dfs.namenode.stale.datanode.interval >= dfs.namenode.stale.datanode.minimum.interval,value
1009,dfs.namenode.num.extra.edits.retained,dfs.namenode.max.extra.edits.segments.retained,dfs.namenode.max.extra.edits.segments.retained = ANY => dfs.namenode.num.extra.edits.retained = ANY,value
1178,dfs.encrypt.data.transfer.cipher.key.bitlength,dfs.encrypt.data.transfer.cipher.suites,dfs.encrypt.data.transfer.cipher.suites != null => dfs.encrypt.data.transfer.cipher.key.bitlength != null,value
1211,dfs.namenode.retrycache.expirytime.millis,dfs.client.failover.sleep.base.millis,dfs.client.failover.sleep.base.millis < dfs.namenode.retrycache.expirytime.millis,value
1226,dfs.client.read.shortcircuit,dfs.client.read.shortcircuit.streams.cache.size,dfs.client.read.shortcircuit = true => dfs.client.read.shortcircuit.streams.cache.size > 0,value
1008,dfs.namenode.num.extra.edits.retained,dfs.namenode.num.checkpoints.retained,dfs.namenode.num.checkpoints.retained = ANY => dfs.namenode.num.extra.edits.retained = ANY,value
982,dfs.namenode.decommission.interval,dfs.namenode.decommission.blocks.per.interval,dfs.namenode.decommission.interval > 0 => dfs.namenode.decommission.blocks.per.interval > 0,value
906,dfs.replication,dfs.namenode.maintenance.replication.min,dfs.replication > dfs.namenode.maintenance.replication.min,value
